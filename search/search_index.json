{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"","title":"Home"},{"location":"API_reference/","text":"Reference This file contains the exact signatures for all functions in module PySide6.QtWidgets, except for defaults which are replaced by \"...\". QCheckBox Bases: QAbstractButton summary Parameters: Name Type Description Default PySide6 _type_ description required Source code in QtWidgets.py 840 841 842 843 844 845 846 847 class QCheckBox ( PySide6 . QtWidgets . QAbstractButton ): \"\"\"_summary_ Args: PySide6 (_type_): _description_ \"\"\" def IsChecked (): ... QComboBox Bases: QWidget summary Parameters: Name Type Description Default PySide6 _type_ description required Source code in QtWidgets.py 973 974 975 976 977 978 979 980 981 982 983 984 985 986 987 988 989 990 991 992 993 994 995 996 997 998 999 1000 1001 1002 1003 1004 1005 1006 1007 1008 1009 1010 1011 1012 1013 1014 1015 1016 1017 1018 1019 1020 1021 1022 1023 1024 1025 1026 1027 1028 1029 1030 1031 1032 1033 1034 1035 1036 1037 1038 1039 1040 1041 1042 1043 1044 1045 1046 1047 1048 1049 1050 1051 1052 1053 1054 1055 1056 1057 1058 1059 1060 1061 1062 1063 1064 1065 1066 1067 1068 1069 1070 1071 1072 1073 1074 1075 class QComboBox ( PySide6 . QtWidgets . QWidget ): \"\"\"_summary_ Args: PySide6 (_type_): _description_ \"\"\" # activated : ClassVar[Signal] = ... # activated(int) currentIndexChanged : ClassVar [ Signal ] = ... # currentIndexChanged(int) # currentTextChanged : ClassVar[Signal] = ... # currentTextChanged(QString) # editTextChanged : ClassVar[Signal] = ... # editTextChanged(QString) # highlighted : ClassVar[Signal] = ... # highlighted(int) # textActivated : ClassVar[Signal] = ... # textActivated(QString) # textHighlighted : ClassVar[Signal] = ... # textHighlighted(QString) class InsertPolicy ( enum . Enum ): NoInsert : QComboBox . InsertPolicy = ... # 0x0 InsertAtTop : QComboBox . InsertPolicy = ... # 0x1 InsertAtCurrent : QComboBox . InsertPolicy = ... # 0x2 InsertAtBottom : QComboBox . InsertPolicy = ... # 0x3 InsertAfterCurrent : QComboBox . InsertPolicy = ... # 0x4 InsertBeforeCurrent : QComboBox . InsertPolicy = ... # 0x5 InsertAlphabetically : QComboBox . InsertPolicy = ... # 0x6 class SizeAdjustPolicy ( enum . Enum ): AdjustToContents : QComboBox . SizeAdjustPolicy = ... # 0x0 AdjustToContentsOnFirstShow : QComboBox . SizeAdjustPolicy = ... # 0x1 AdjustToMinimumContentsLengthWithIcon : QComboBox . SizeAdjustPolicy = ... # 0x2 def __init__ ( self , parent : Optional [ PySide6 . QtWidgets . QWidget ] = ... ) -> None : ... @overload def addItem ( self , icon : Union [ PySide6 . QtGui . QIcon , PySide6 . QtGui . QPixmap ], text : str , userData : Any = ... , ) -> None : ... @overload def addItem ( self , text : str , userData : Any = ... ) -> None : ... def addItems ( self , texts : Sequence [ str ]) -> None : ... # def changeEvent(self, e: PySide6.QtCore.QEvent) -> None: ... def clear ( self ) -> None : ... # def clearEditText(self) -> None: ... # def completer(self) -> PySide6.QtWidgets.QCompleter: ... # def contextMenuEvent(self, e: PySide6.QtGui.QContextMenuEvent) -> None: ... # def count(self) -> int: ... # def currentData(self, role: int = ...) -> Any: ... def currentIndex ( self ) -> int : ... def currentText ( self ) -> str : ... # def duplicatesEnabled(self) -> bool: ... # def event(self, event: PySide6.QtCore.QEvent) -> bool: ... # def findData(self, data: Any, role: int = ..., flags: PySide6.QtCore.Qt.MatchFlag = ...) -> int: ... # def findText(self, text: str, flags: PySide6.QtCore.Qt.MatchFlag = ...) -> int: ... # def focusInEvent(self, e: PySide6.QtGui.QFocusEvent) -> None: ... # def focusOutEvent(self, e: PySide6.QtGui.QFocusEvent) -> None: ... # def hasFrame(self) -> bool: ... # def hideEvent(self, e: PySide6.QtGui.QHideEvent) -> None: ... # def hidePopup(self) -> None: ... # def iconSize(self) -> PySide6.QtCore.QSize: ... # def initStyleOption(self, option: PySide6.QtWidgets.QStyleOptionComboBox) -> None: ... # def inputMethodEvent(self, arg__1: PySide6.QtGui.QInputMethodEvent) -> None: ... # @overload # def inputMethodQuery(self, arg__1: PySide6.QtCore.Qt.InputMethodQuery) -> Any: ... # @overload # def inputMethodQuery(self, query: PySide6.QtCore.Qt.InputMethodQuery, argument: Any) -> Any: ... # @overload # def insertItem(self, index: int, icon: Union[PySide6.QtGui.QIcon, PySide6.QtGui.QPixmap], text: str, userData: Any = ...) -> None: ... # @overload # def insertItem(self, index: int, text: str, userData: Any = ...) -> None: ... # def insertItems(self, index: int, texts: Sequence[str]) -> None: ... # def insertPolicy(self) -> PySide6.QtWidgets.QComboBox.InsertPolicy: ... # def insertSeparator(self, index: int) -> None: ... # def isEditable(self) -> bool: ... # def itemData(self, index: int, role: int = ...) -> Any: ... # def itemDelegate(self) -> PySide6.QtWidgets.QAbstractItemDelegate: ... # def itemIcon(self, index: int) -> PySide6.QtGui.QIcon: ... # def itemText(self, index: int) -> str: ... # def keyPressEvent(self, e: PySide6.QtGui.QKeyEvent) -> None: ... # def keyReleaseEvent(self, e: PySide6.QtGui.QKeyEvent) -> None: ... # def lineEdit(self) -> PySide6.QtWidgets.QLineEdit: ... # def maxCount(self) -> int: ... # def maxVisibleItems(self) -> int: ... # def minimumContentsLength(self) -> int: ... # def minimumSizeHint(self) -> PySide6.QtCore.QSize: ... # def model(self) -> PySide6.QtCore.QAbstractItemModel: ... # def modelColumn(self) -> int: ... # def mousePressEvent(self, e: PySide6.QtGui.QMouseEvent) -> None: ... # def mouseReleaseEvent(self, e: PySide6.QtGui.QMouseEvent) -> None: ... # def paintEvent(self, e: PySide6.QtGui.QPaintEvent) -> None: ... # def placeholderText(self) -> str: ... def removeItem ( self , index : int ) -> None : ... # def resizeEvent(self, e: PySide6.QtGui.QResizeEvent) -> None: ... # def rootModelIndex(self) -> PySide6.QtCore.QModelIndex: ... # def setCompleter(self, c: PySide6.QtWidgets.QCompleter) -> None: ... def setCurrentIndex ( self , index : int ) -> None : ... def setCurrentText ( self , text : str ) -> None : ... def setText (): ... QDoubleSpinBox Bases: QAbstractSpinBox summary Parameters: Name Type Description Default PySide6 _type_ description required Source code in QtWidgets.py 1540 1541 1542 1543 1544 1545 1546 1547 1548 1549 1550 1551 1552 1553 1554 1555 1556 1557 1558 1559 1560 1561 1562 1563 1564 1565 1566 1567 1568 1569 1570 1571 1572 1573 1574 1575 class QDoubleSpinBox ( PySide6 . QtWidgets . QAbstractSpinBox ): \"\"\"_summary_ Args: PySide6 (_type_): _description_ \"\"\" textChanged : ClassVar [ Signal ] = ... # textChanged(QString) valueChanged : ClassVar [ Signal ] = ... # valueChanged(double) # def __init__(self, parent: Optional[PySide6.QtWidgets.QWidget] = ...) -> None: ... # def cleanText(self) -> str: ... # def decimals(self) -> int: ... # def fixup(self, str: str) -> str: ... # def maximum(self) -> float: ... # def minimum(self) -> float: ... # def prefix(self) -> str: ... # def setDecimals(self, prec: int) -> None: ... def setMaximum ( self , max : float ) -> None : ... def setMinimum ( self , min : float ) -> None : ... # def setPrefix(self, prefix: str) -> None: ... # def setRange(self, min: float, max: float) -> None: ... def setSingleStep ( self , val : float ) -> None : ... # def setStepType(self, stepType: PySide6.QtWidgets.QAbstractSpinBox.StepType) -> None: ... # def setSuffix(self, suffix: str) -> None: ... def setValue ( self , val : float ) -> None : ... # def singleStep(self) -> float: ... # def stepType(self) -> PySide6.QtWidgets.QAbstractSpinBox.StepType: ... # def suffix(self) -> str: ... # def textFromValue(self, val: float) -> str: ... # def validate(self, input: str, pos: int) -> object: ... def value ( self ) -> float : ... QFormLayout Bases: QLayout summary Parameters: Name Type Description Default PySide6 _type_ description required Source code in QtWidgets.py 1897 1898 1899 1900 1901 1902 1903 1904 1905 1906 1907 1908 1909 1910 1911 1912 1913 1914 1915 1916 1917 1918 1919 1920 1921 1922 1923 1924 1925 1926 1927 1928 1929 1930 1931 1932 1933 1934 1935 1936 1937 1938 1939 1940 1941 1942 1943 1944 1945 1946 1947 1948 1949 class QFormLayout ( PySide6 . QtWidgets . QLayout ): \"\"\"_summary_ Args: PySide6 (_type_): _description_ \"\"\" class FieldGrowthPolicy ( enum . Enum ): FieldsStayAtSizeHint : QFormLayout . FieldGrowthPolicy = ... # 0x0 ExpandingFieldsGrow : QFormLayout . FieldGrowthPolicy = ... # 0x1 AllNonFixedFieldsGrow : QFormLayout . FieldGrowthPolicy = ... # 0x2 class ItemRole ( enum . Enum ): LabelRole : QFormLayout . ItemRole = ... # 0x0 FieldRole : QFormLayout . ItemRole = ... # 0x1 SpanningRole : QFormLayout . ItemRole = ... # 0x2 class RowWrapPolicy ( enum . Enum ): DontWrapRows : QFormLayout . RowWrapPolicy = ... # 0x0 WrapLongRows : QFormLayout . RowWrapPolicy = ... # 0x1 WrapAllRows : QFormLayout . RowWrapPolicy = ... # 0x2 class TakeRowResult ( Shiboken . Object ): @overload def __init__ ( self ) -> None : ... @overload def __init__ ( self , TakeRowResult : PySide6 . QtWidgets . QFormLayout . TakeRowResult ) -> None : ... @staticmethod def __copy__ () -> None : ... def __init__ ( self , parent : Optional [ PySide6 . QtWidgets . QWidget ] = ... ) -> None : ... def addItem ( self , item : PySide6 . QtWidgets . QLayoutItem ) -> None : ... @overload def addRow ( self , label : PySide6 . QtWidgets . QWidget , field : PySide6 . QtWidgets . QLayout ) -> None : ... @overload def addRow ( self , label : PySide6 . QtWidgets . QWidget , field : PySide6 . QtWidgets . QWidget ) -> None : ... @overload def addRow ( self , labelText : str , field : PySide6 . QtWidgets . QLayout ) -> None : ... @overload def addRow ( self , labelText : str , field : PySide6 . QtWidgets . QWidget ) -> None : ... @overload def addRow ( self , layout : PySide6 . QtWidgets . QLayout ) -> None : ... @overload def addRow ( self , widget : PySide6 . QtWidgets . QWidget ) -> None : ... QGroupBox Bases: QWidget summary Parameters: Name Type Description Default PySide6 _type_ description required Source code in QtWidgets.py 3797 3798 3799 3800 3801 3802 3803 3804 class QGroupBox ( PySide6 . QtWidgets . QWidget ): \"\"\"_summary_ Args: PySide6 (_type_): _description_ \"\"\" ... QHBoxLayout Bases: QBoxLayout summary Parameters: Name Type Description Default PySide6 _type_ description required Source code in QtWidgets.py 3836 3837 3838 3839 3840 3841 3842 3843 class QHBoxLayout ( PySide6 . QtWidgets . QBoxLayout ): \"\"\"_summary_ Args: PySide6 (_type_): _description_ \"\"\" ... QLabel Bases: QFrame summary Parameters: Name Type Description Default PySide6 _type_ description required Source code in QtWidgets.py 4195 4196 4197 4198 4199 4200 4201 4202 4203 4204 4205 4206 4207 4208 4209 4210 4211 4212 4213 4214 4215 4216 4217 4218 4219 4220 4221 4222 4223 4224 4225 4226 4227 4228 4229 4230 4231 4232 4233 4234 4235 4236 4237 4238 4239 4240 4241 4242 4243 4244 4245 4246 4247 4248 4249 4250 class QLabel ( PySide6 . QtWidgets . QFrame ): \"\"\"_summary_ Args: PySide6 (_type_): _description_ \"\"\" # linkActivated : ClassVar[Signal] = ... # linkActivated(QString) # linkHovered : ClassVar[Signal] = ... # linkHovered(QString) # @overload # def __init__(self, parent: Optional[PySide6.QtWidgets.QWidget] = ..., f: PySide6.QtCore.Qt.WindowType = ...) -> None: ... # @overload # def __init__(self, text: str, parent: Optional[PySide6.QtWidgets.QWidget] = ..., f: PySide6.QtCore.Qt.WindowType = ...) -> None: ... # def alignment(self) -> PySide6.QtCore.Qt.AlignmentFlag: ... # def buddy(self) -> PySide6.QtWidgets.QWidget: ... # def changeEvent(self, arg__1: PySide6.QtCore.QEvent) -> None: ... # def clear(self) -> None: ... # def contextMenuEvent(self, ev: PySide6.QtGui.QContextMenuEvent) -> None: ... # def event(self, e: PySide6.QtCore.QEvent) -> bool: ... # def focusInEvent(self, ev: PySide6.QtGui.QFocusEvent) -> None: ... # def focusNextPrevChild(self, next: bool) -> bool: ... # def focusOutEvent(self, ev: PySide6.QtGui.QFocusEvent) -> None: ... # def hasScaledContents(self) -> bool: ... # def hasSelectedText(self) -> bool: ... # def heightForWidth(self, arg__1: int) -> int: ... # def indent(self) -> int: ... # def keyPressEvent(self, ev: PySide6.QtGui.QKeyEvent) -> None: ... # def margin(self) -> int: ... # def minimumSizeHint(self) -> PySide6.QtCore.QSize: ... # def mouseMoveEvent(self, ev: PySide6.QtGui.QMouseEvent) -> None: ... # def mousePressEvent(self, ev: PySide6.QtGui.QMouseEvent) -> None: ... # def mouseReleaseEvent(self, ev: PySide6.QtGui.QMouseEvent) -> None: ... # def movie(self) -> PySide6.QtGui.QMovie: ... # def openExternalLinks(self) -> bool: ... # def paintEvent(self, arg__1: PySide6.QtGui.QPaintEvent) -> None: ... # def picture(self) -> PySide6.QtGui.QPicture: ... # def pixmap(self) -> PySide6.QtGui.QPixmap: ... # def selectedText(self) -> str: ... # def selectionStart(self) -> int: ... # def setAlignment(self, arg__1: PySide6.QtCore.Qt.AlignmentFlag) -> None: ... # def setBuddy(self, arg__1: PySide6.QtWidgets.QWidget) -> None: ... # def setIndent(self, arg__1: int) -> None: ... # def setMargin(self, arg__1: int) -> None: ... # def setMovie(self, movie: PySide6.QtGui.QMovie) -> None: ... # @overload # def setNum(self, arg__1: float) -> None: ... # @overload # def setNum(self, arg__1: int) -> None: ... # def setOpenExternalLinks(self, open: bool) -> None: ... # def setPicture(self, arg__1: Union[PySide6.QtGui.QPicture, int]) -> None: ... # def setPixmap(self, arg__1: Union[PySide6.QtGui.QPixmap, PySide6.QtGui.QImage, str]) -> None: ... # def setScaledContents(self, arg__1: bool) -> None: ... # def setSelection(self, arg__1: int, arg__2: int) -> None: ... def setText ( self , arg__1 : str ) -> None : ... QMainWindow Bases: QWidget summary Parameters: Name Type Description Default PySide6 _type_ description required Source code in QtWidgets.py 4738 4739 4740 4741 4742 4743 4744 4745 class QMainWindow ( PySide6 . QtWidgets . QWidget ): \"\"\"_summary_ Args: PySide6 (_type_): _description_ \"\"\" ... QPushButton Bases: QAbstractButton summary Parameters: Name Type Description Default PySide6 _type_ description required Source code in QtWidgets.py 5583 5584 5585 5586 5587 5588 5589 5590 5591 5592 class QPushButton ( PySide6 . QtWidgets . QAbstractButton ): \"\"\"_summary_ Args: PySide6 (_type_): _description_ \"\"\" clicked : ClassVar [ Signal ] = ... # clicked() def setText (): ... QSpinBox Bases: QAbstractSpinBox summary Parameters: Name Type Description Default PySide6 _type_ description required Source code in QtWidgets.py 5951 5952 5953 5954 5955 5956 5957 5958 5959 5960 5961 5962 5963 5964 5965 5966 5967 5968 5969 5970 5971 5972 5973 5974 5975 5976 5977 5978 5979 5980 5981 5982 5983 5984 5985 5986 5987 class QSpinBox ( PySide6 . QtWidgets . QAbstractSpinBox ): \"\"\"_summary_ Args: PySide6 (_type_): _description_ \"\"\" textChanged : ClassVar [ Signal ] = ... # textChanged(QString) valueChanged : ClassVar [ Signal ] = ... # valueChanged(int) # def __init__(self, parent: Optional[PySide6.QtWidgets.QWidget] = ...) -> None: ... # def cleanText(self) -> str: ... # def displayIntegerBase(self) -> int: ... # def event(self, event: PySide6.QtCore.QEvent) -> bool: ... # def fixup(self, str: str) -> str: ... # def maximum(self) -> int: ... # def minimum(self) -> int: ... # def prefix(self) -> str: ... # def setDisplayIntegerBase(self, base: int) -> None: ... def setMaximum ( self , max : int ) -> None : ... def setMinimum ( self , min : int ) -> None : ... # def setPrefix(self, prefix: str) -> None: ... # def setRange(self, min: int, max: int) -> None: ... def setSingleStep ( self , val : int ) -> None : ... # def setStepType(self, stepType: PySide6.QtWidgets.QAbstractSpinBox.StepType) -> None: ... # def setSuffix(self, suffix: str) -> None: ... def setValue ( self , val : int ) -> None : ... # def singleStep(self) -> int: ... # def stepType(self) -> PySide6.QtWidgets.QAbstractSpinBox.StepType: ... # def suffix(self) -> str: ... # def textFromValue(self, val: int) -> str: ... # def validate(self, input: str, pos: int) -> object: ... def value ( self ) -> int : ... QTextEdit Bases: QAbstractScrollArea summary Parameters: Name Type Description Default PySide6 _type_ description required Source code in QtWidgets.py 8050 8051 8052 8053 8054 8055 8056 8057 8058 8059 8060 8061 8062 8063 8064 8065 8066 8067 8068 8069 8070 8071 8072 8073 8074 8075 8076 8077 8078 8079 8080 8081 8082 8083 8084 8085 8086 8087 8088 8089 8090 8091 8092 8093 8094 8095 8096 8097 8098 8099 8100 8101 8102 8103 8104 8105 8106 8107 8108 8109 8110 8111 8112 8113 8114 8115 8116 8117 8118 8119 8120 8121 8122 8123 8124 8125 8126 8127 8128 8129 8130 8131 8132 8133 8134 8135 8136 8137 8138 8139 8140 8141 8142 8143 8144 8145 8146 8147 8148 8149 8150 8151 8152 8153 8154 8155 8156 8157 8158 8159 8160 8161 8162 8163 8164 8165 8166 8167 8168 8169 8170 8171 8172 8173 8174 8175 8176 8177 8178 8179 8180 8181 8182 8183 8184 8185 8186 8187 8188 8189 8190 8191 8192 8193 8194 8195 8196 8197 8198 8199 8200 8201 8202 8203 8204 8205 8206 8207 8208 8209 8210 8211 8212 8213 8214 8215 8216 8217 8218 8219 8220 8221 8222 8223 8224 8225 8226 8227 8228 8229 8230 8231 8232 8233 8234 8235 8236 8237 8238 8239 8240 8241 8242 8243 8244 8245 8246 8247 8248 8249 8250 8251 8252 8253 8254 8255 8256 8257 8258 8259 8260 8261 8262 8263 8264 8265 8266 8267 8268 8269 8270 8271 class QTextEdit ( PySide6 . QtWidgets . QAbstractScrollArea ): \"\"\"_summary_ Args: PySide6 (_type_): _description_ \"\"\" copyAvailable : ClassVar [ Signal ] = ... # copyAvailable(bool) currentCharFormatChanged : ClassVar [ Signal ] = ( ... ) # currentCharFormatChanged(QTextCharFormat) cursorPositionChanged : ClassVar [ Signal ] = ... # cursorPositionChanged() redoAvailable : ClassVar [ Signal ] = ... # redoAvailable(bool) selectionChanged : ClassVar [ Signal ] = ... # selectionChanged() textChanged : ClassVar [ Signal ] = ... # textChanged() undoAvailable : ClassVar [ Signal ] = ... # undoAvailable(bool) class AutoFormattingFlag ( enum . Flag ): AutoAll : QTextEdit . AutoFormattingFlag = ... # -0x1 AutoNone : QTextEdit . AutoFormattingFlag = ... # 0x0 AutoBulletList : QTextEdit . AutoFormattingFlag = ... # 0x1 class ExtraSelection ( Shiboken . Object ): @overload def __init__ ( self ) -> None : ... @overload def __init__ ( self , ExtraSelection : PySide6 . QtWidgets . QTextEdit . ExtraSelection ) -> None : ... @staticmethod def __copy__ () -> None : ... class LineWrapMode ( enum . Enum ): NoWrap : QTextEdit . LineWrapMode = ... # 0x0 WidgetWidth : QTextEdit . LineWrapMode = ... # 0x1 FixedPixelWidth : QTextEdit . LineWrapMode = ... # 0x2 FixedColumnWidth : QTextEdit . LineWrapMode = ... # 0x3 @overload def __init__ ( self , parent : Optional [ PySide6 . QtWidgets . QWidget ] = ... ) -> None : ... @overload def __init__ ( self , text : str , parent : Optional [ PySide6 . QtWidgets . QWidget ] = ... ) -> None : ... def acceptRichText ( self ) -> bool : ... def alignment ( self ) -> PySide6 . QtCore . Qt . AlignmentFlag : ... def anchorAt ( self , pos : PySide6 . QtCore . QPoint ) -> str : ... def append ( self , text : str ) -> None : ... def autoFormatting ( self ) -> PySide6 . QtWidgets . QTextEdit . AutoFormattingFlag : ... def canInsertFromMimeData ( self , source : PySide6 . QtCore . QMimeData ) -> bool : ... def canPaste ( self ) -> bool : ... def changeEvent ( self , e : PySide6 . QtCore . QEvent ) -> None : ... def clear ( self ) -> None : ... def contextMenuEvent ( self , e : PySide6 . QtGui . QContextMenuEvent ) -> None : ... def copy ( self ) -> None : ... def createMimeDataFromSelection ( self ) -> PySide6 . QtCore . QMimeData : ... @overload def createStandardContextMenu ( self ) -> PySide6 . QtWidgets . QMenu : ... @overload def createStandardContextMenu ( self , position : PySide6 . QtCore . QPoint ) -> PySide6 . QtWidgets . QMenu : ... def currentCharFormat ( self ) -> PySide6 . QtGui . QTextCharFormat : ... def currentFont ( self ) -> PySide6 . QtGui . QFont : ... def cursorForPosition ( self , pos : PySide6 . QtCore . QPoint ) -> PySide6 . QtGui . QTextCursor : ... @overload def cursorRect ( self ) -> PySide6 . QtCore . QRect : ... @overload def cursorRect ( self , cursor : PySide6 . QtGui . QTextCursor ) -> PySide6 . QtCore . QRect : ... def cursorWidth ( self ) -> int : ... def cut ( self ) -> None : ... def doSetTextCursor ( self , cursor : PySide6 . QtGui . QTextCursor ) -> None : ... def document ( self ) -> PySide6 . QtGui . QTextDocument : ... def documentTitle ( self ) -> str : ... def dragEnterEvent ( self , e : PySide6 . QtGui . QDragEnterEvent ) -> None : ... def dragLeaveEvent ( self , e : PySide6 . QtGui . QDragLeaveEvent ) -> None : ... def dragMoveEvent ( self , e : PySide6 . QtGui . QDragMoveEvent ) -> None : ... def dropEvent ( self , e : PySide6 . QtGui . QDropEvent ) -> None : ... def ensureCursorVisible ( self ) -> None : ... def event ( self , e : PySide6 . QtCore . QEvent ) -> bool : ... def extraSelections ( self ) -> List [ PySide6 . QtWidgets . QTextEdit . ExtraSelection ]: ... @overload def find ( self , exp : str , options : PySide6 . QtGui . QTextDocument . FindFlag = ... ) -> bool : ... @overload def find ( self , exp : Union [ PySide6 . QtCore . QRegularExpression , str ], options : PySide6 . QtGui . QTextDocument . FindFlag = ... , ) -> bool : ... def focusInEvent ( self , e : PySide6 . QtGui . QFocusEvent ) -> None : ... def focusNextPrevChild ( self , next : bool ) -> bool : ... def focusOutEvent ( self , e : PySide6 . QtGui . QFocusEvent ) -> None : ... def fontFamily ( self ) -> str : ... def fontItalic ( self ) -> bool : ... def fontPointSize ( self ) -> float : ... def fontUnderline ( self ) -> bool : ... def fontWeight ( self ) -> int : ... def inputMethodEvent ( self , arg__1 : PySide6 . QtGui . QInputMethodEvent ) -> None : ... @overload def inputMethodQuery ( self , property : PySide6 . QtCore . Qt . InputMethodQuery ) -> Any : ... @overload def inputMethodQuery ( self , query : PySide6 . QtCore . Qt . InputMethodQuery , argument : Any ) -> Any : ... def insertFromMimeData ( self , source : PySide6 . QtCore . QMimeData ) -> None : ... def insertHtml ( self , text : str ) -> None : ... def insertPlainText ( self , text : str ) -> None : ... def isReadOnly ( self ) -> bool : ... def isUndoRedoEnabled ( self ) -> bool : ... def keyPressEvent ( self , e : PySide6 . QtGui . QKeyEvent ) -> None : ... def keyReleaseEvent ( self , e : PySide6 . QtGui . QKeyEvent ) -> None : ... def lineWrapColumnOrWidth ( self ) -> int : ... def lineWrapMode ( self ) -> PySide6 . QtWidgets . QTextEdit . LineWrapMode : ... def loadResource ( self , type : int , name : Union [ PySide6 . QtCore . QUrl , str ]) -> Any : ... def mergeCurrentCharFormat ( self , modifier : PySide6 . QtGui . QTextCharFormat ) -> None : ... def mouseDoubleClickEvent ( self , e : PySide6 . QtGui . QMouseEvent ) -> None : ... def mouseMoveEvent ( self , e : PySide6 . QtGui . QMouseEvent ) -> None : ... def mousePressEvent ( self , e : PySide6 . QtGui . QMouseEvent ) -> None : ... def mouseReleaseEvent ( self , e : PySide6 . QtGui . QMouseEvent ) -> None : ... def moveCursor ( self , operation : PySide6 . QtGui . QTextCursor . MoveOperation , mode : PySide6 . QtGui . QTextCursor . MoveMode = ... , ) -> None : ... def overwriteMode ( self ) -> bool : ... def paintEvent ( self , e : PySide6 . QtGui . QPaintEvent ) -> None : ... def paste ( self ) -> None : ... def placeholderText ( self ) -> str : ... def print_ ( self , printer : PySide6 . QtGui . QPagedPaintDevice ) -> None : ... def redo ( self ) -> None : ... def resizeEvent ( self , e : PySide6 . QtGui . QResizeEvent ) -> None : ... def scrollContentsBy ( self , dx : int , dy : int ) -> None : ... def scrollToAnchor ( self , name : str ) -> None : ... def selectAll ( self ) -> None : ... def setAcceptRichText ( self , accept : bool ) -> None : ... def setAlignment ( self , a : PySide6 . QtCore . Qt . AlignmentFlag ) -> None : ... def setAutoFormatting ( self , features : PySide6 . QtWidgets . QTextEdit . AutoFormattingFlag ) -> None : ... def setCurrentCharFormat ( self , format : PySide6 . QtGui . QTextCharFormat ) -> None : ... def setCurrentFont ( self , f : Union [ PySide6 . QtGui . QFont , str , Sequence [ str ]] ) -> None : ... def setCursorWidth ( self , width : int ) -> None : ... def setDocument ( self , document : PySide6 . QtGui . QTextDocument ) -> None : ... def setDocumentTitle ( self , title : str ) -> None : ... def setExtraSelections ( self , selections : Sequence [ PySide6 . QtWidgets . QTextEdit . ExtraSelection ] ) -> None : ... def setFontFamily ( self , fontFamily : str ) -> None : ... def setFontItalic ( self , b : bool ) -> None : ... def setFontPointSize ( self , s : float ) -> None : ... def setFontUnderline ( self , b : bool ) -> None : ... def setFontWeight ( self , w : int ) -> None : ... def setHtml ( self , text : str ) -> None : ... def setLineWrapColumnOrWidth ( self , w : int ) -> None : ... def setLineWrapMode ( self , mode : PySide6 . QtWidgets . QTextEdit . LineWrapMode ) -> None : ... def setMarkdown ( self , markdown : str ) -> None : ... def setOverwriteMode ( self , overwrite : bool ) -> None : ... def setPlaceholderText ( self , placeholderText : str ) -> None : ... def setPlainText ( self , text : str ) -> None : ... def setReadOnly ( self , ro : bool ) -> None : ... def setTabChangesFocus ( self , b : bool ) -> None : ... def setTabStopDistance ( self , distance : float ) -> None : ... def setText ( self , text : str ) -> None : ... def setTextBackgroundColor ( self , c : Union [ PySide6 . QtGui . QColor , PySide6 . QtGui . QRgba64 , Any , PySide6 . QtCore . Qt . GlobalColor , str , int , ], ) -> None : ... def setTextColor ( self , c : Union [ PySide6 . QtGui . QColor , PySide6 . QtGui . QRgba64 , Any , PySide6 . QtCore . Qt . GlobalColor , str , int , ], ) -> None : ... def setTextCursor ( self , cursor : PySide6 . QtGui . QTextCursor ) -> None : ... def setTextInteractionFlags ( self , flags : PySide6 . QtCore . Qt . TextInteractionFlag ) -> None : ... def setUndoRedoEnabled ( self , enable : bool ) -> None : ... def setWordWrapMode ( self , policy : PySide6 . QtGui . QTextOption . WrapMode ) -> None : ... def showEvent ( self , arg__1 : PySide6 . QtGui . QShowEvent ) -> None : ... def tabChangesFocus ( self ) -> bool : ... def tabStopDistance ( self ) -> float : ... def textBackgroundColor ( self ) -> PySide6 . QtGui . QColor : ... def textColor ( self ) -> PySide6 . QtGui . QColor : ... def textCursor ( self ) -> PySide6 . QtGui . QTextCursor : ... def textInteractionFlags ( self ) -> PySide6 . QtCore . Qt . TextInteractionFlag : ... def timerEvent ( self , e : PySide6 . QtCore . QTimerEvent ) -> None : ... def toHtml ( self ) -> str : ... def toMarkdown ( self , features : PySide6 . QtGui . QTextDocument . MarkdownFeature = ... ) -> str : ... def toPlainText ( self ) -> str : ... def undo ( self ) -> None : ... def wheelEvent ( self , e : PySide6 . QtGui . QWheelEvent ) -> None : ... def wordWrapMode ( self ) -> PySide6 . QtGui . QTextOption . WrapMode : ... def zoomIn ( self , range : int = ... ) -> None : ... def zoomInF ( self , range : float ) -> None : ... def zoomOut ( self , range : int = ... ) -> None : ... QVBoxLayout Bases: QBoxLayout summary Parameters: Name Type Description Default PySide6 _type_ description required Source code in QtWidgets.py 8772 8773 8774 8775 8776 8777 8778 8779 8780 8781 8782 class QVBoxLayout ( PySide6 . QtWidgets . QBoxLayout ): \"\"\"_summary_ Args: PySide6 (_type_): _description_ \"\"\" @overload def __init__ ( self ) -> None : ... @overload def __init__ ( self , parent : PySide6 . QtWidgets . QWidget ) -> None : ...","title":"Reference"},{"location":"API_reference/#reference","text":"This file contains the exact signatures for all functions in module PySide6.QtWidgets, except for defaults which are replaced by \"...\".","title":"Reference"},{"location":"API_reference/#QtWidgets.QCheckBox","text":"Bases: QAbstractButton summary Parameters: Name Type Description Default PySide6 _type_ description required Source code in QtWidgets.py 840 841 842 843 844 845 846 847 class QCheckBox ( PySide6 . QtWidgets . QAbstractButton ): \"\"\"_summary_ Args: PySide6 (_type_): _description_ \"\"\" def IsChecked (): ...","title":"QCheckBox"},{"location":"API_reference/#QtWidgets.QComboBox","text":"Bases: QWidget summary Parameters: Name Type Description Default PySide6 _type_ description required Source code in QtWidgets.py 973 974 975 976 977 978 979 980 981 982 983 984 985 986 987 988 989 990 991 992 993 994 995 996 997 998 999 1000 1001 1002 1003 1004 1005 1006 1007 1008 1009 1010 1011 1012 1013 1014 1015 1016 1017 1018 1019 1020 1021 1022 1023 1024 1025 1026 1027 1028 1029 1030 1031 1032 1033 1034 1035 1036 1037 1038 1039 1040 1041 1042 1043 1044 1045 1046 1047 1048 1049 1050 1051 1052 1053 1054 1055 1056 1057 1058 1059 1060 1061 1062 1063 1064 1065 1066 1067 1068 1069 1070 1071 1072 1073 1074 1075 class QComboBox ( PySide6 . QtWidgets . QWidget ): \"\"\"_summary_ Args: PySide6 (_type_): _description_ \"\"\" # activated : ClassVar[Signal] = ... # activated(int) currentIndexChanged : ClassVar [ Signal ] = ... # currentIndexChanged(int) # currentTextChanged : ClassVar[Signal] = ... # currentTextChanged(QString) # editTextChanged : ClassVar[Signal] = ... # editTextChanged(QString) # highlighted : ClassVar[Signal] = ... # highlighted(int) # textActivated : ClassVar[Signal] = ... # textActivated(QString) # textHighlighted : ClassVar[Signal] = ... # textHighlighted(QString) class InsertPolicy ( enum . Enum ): NoInsert : QComboBox . InsertPolicy = ... # 0x0 InsertAtTop : QComboBox . InsertPolicy = ... # 0x1 InsertAtCurrent : QComboBox . InsertPolicy = ... # 0x2 InsertAtBottom : QComboBox . InsertPolicy = ... # 0x3 InsertAfterCurrent : QComboBox . InsertPolicy = ... # 0x4 InsertBeforeCurrent : QComboBox . InsertPolicy = ... # 0x5 InsertAlphabetically : QComboBox . InsertPolicy = ... # 0x6 class SizeAdjustPolicy ( enum . Enum ): AdjustToContents : QComboBox . SizeAdjustPolicy = ... # 0x0 AdjustToContentsOnFirstShow : QComboBox . SizeAdjustPolicy = ... # 0x1 AdjustToMinimumContentsLengthWithIcon : QComboBox . SizeAdjustPolicy = ... # 0x2 def __init__ ( self , parent : Optional [ PySide6 . QtWidgets . QWidget ] = ... ) -> None : ... @overload def addItem ( self , icon : Union [ PySide6 . QtGui . QIcon , PySide6 . QtGui . QPixmap ], text : str , userData : Any = ... , ) -> None : ... @overload def addItem ( self , text : str , userData : Any = ... ) -> None : ... def addItems ( self , texts : Sequence [ str ]) -> None : ... # def changeEvent(self, e: PySide6.QtCore.QEvent) -> None: ... def clear ( self ) -> None : ... # def clearEditText(self) -> None: ... # def completer(self) -> PySide6.QtWidgets.QCompleter: ... # def contextMenuEvent(self, e: PySide6.QtGui.QContextMenuEvent) -> None: ... # def count(self) -> int: ... # def currentData(self, role: int = ...) -> Any: ... def currentIndex ( self ) -> int : ... def currentText ( self ) -> str : ... # def duplicatesEnabled(self) -> bool: ... # def event(self, event: PySide6.QtCore.QEvent) -> bool: ... # def findData(self, data: Any, role: int = ..., flags: PySide6.QtCore.Qt.MatchFlag = ...) -> int: ... # def findText(self, text: str, flags: PySide6.QtCore.Qt.MatchFlag = ...) -> int: ... # def focusInEvent(self, e: PySide6.QtGui.QFocusEvent) -> None: ... # def focusOutEvent(self, e: PySide6.QtGui.QFocusEvent) -> None: ... # def hasFrame(self) -> bool: ... # def hideEvent(self, e: PySide6.QtGui.QHideEvent) -> None: ... # def hidePopup(self) -> None: ... # def iconSize(self) -> PySide6.QtCore.QSize: ... # def initStyleOption(self, option: PySide6.QtWidgets.QStyleOptionComboBox) -> None: ... # def inputMethodEvent(self, arg__1: PySide6.QtGui.QInputMethodEvent) -> None: ... # @overload # def inputMethodQuery(self, arg__1: PySide6.QtCore.Qt.InputMethodQuery) -> Any: ... # @overload # def inputMethodQuery(self, query: PySide6.QtCore.Qt.InputMethodQuery, argument: Any) -> Any: ... # @overload # def insertItem(self, index: int, icon: Union[PySide6.QtGui.QIcon, PySide6.QtGui.QPixmap], text: str, userData: Any = ...) -> None: ... # @overload # def insertItem(self, index: int, text: str, userData: Any = ...) -> None: ... # def insertItems(self, index: int, texts: Sequence[str]) -> None: ... # def insertPolicy(self) -> PySide6.QtWidgets.QComboBox.InsertPolicy: ... # def insertSeparator(self, index: int) -> None: ... # def isEditable(self) -> bool: ... # def itemData(self, index: int, role: int = ...) -> Any: ... # def itemDelegate(self) -> PySide6.QtWidgets.QAbstractItemDelegate: ... # def itemIcon(self, index: int) -> PySide6.QtGui.QIcon: ... # def itemText(self, index: int) -> str: ... # def keyPressEvent(self, e: PySide6.QtGui.QKeyEvent) -> None: ... # def keyReleaseEvent(self, e: PySide6.QtGui.QKeyEvent) -> None: ... # def lineEdit(self) -> PySide6.QtWidgets.QLineEdit: ... # def maxCount(self) -> int: ... # def maxVisibleItems(self) -> int: ... # def minimumContentsLength(self) -> int: ... # def minimumSizeHint(self) -> PySide6.QtCore.QSize: ... # def model(self) -> PySide6.QtCore.QAbstractItemModel: ... # def modelColumn(self) -> int: ... # def mousePressEvent(self, e: PySide6.QtGui.QMouseEvent) -> None: ... # def mouseReleaseEvent(self, e: PySide6.QtGui.QMouseEvent) -> None: ... # def paintEvent(self, e: PySide6.QtGui.QPaintEvent) -> None: ... # def placeholderText(self) -> str: ... def removeItem ( self , index : int ) -> None : ... # def resizeEvent(self, e: PySide6.QtGui.QResizeEvent) -> None: ... # def rootModelIndex(self) -> PySide6.QtCore.QModelIndex: ... # def setCompleter(self, c: PySide6.QtWidgets.QCompleter) -> None: ... def setCurrentIndex ( self , index : int ) -> None : ... def setCurrentText ( self , text : str ) -> None : ... def setText (): ...","title":"QComboBox"},{"location":"API_reference/#QtWidgets.QDoubleSpinBox","text":"Bases: QAbstractSpinBox summary Parameters: Name Type Description Default PySide6 _type_ description required Source code in QtWidgets.py 1540 1541 1542 1543 1544 1545 1546 1547 1548 1549 1550 1551 1552 1553 1554 1555 1556 1557 1558 1559 1560 1561 1562 1563 1564 1565 1566 1567 1568 1569 1570 1571 1572 1573 1574 1575 class QDoubleSpinBox ( PySide6 . QtWidgets . QAbstractSpinBox ): \"\"\"_summary_ Args: PySide6 (_type_): _description_ \"\"\" textChanged : ClassVar [ Signal ] = ... # textChanged(QString) valueChanged : ClassVar [ Signal ] = ... # valueChanged(double) # def __init__(self, parent: Optional[PySide6.QtWidgets.QWidget] = ...) -> None: ... # def cleanText(self) -> str: ... # def decimals(self) -> int: ... # def fixup(self, str: str) -> str: ... # def maximum(self) -> float: ... # def minimum(self) -> float: ... # def prefix(self) -> str: ... # def setDecimals(self, prec: int) -> None: ... def setMaximum ( self , max : float ) -> None : ... def setMinimum ( self , min : float ) -> None : ... # def setPrefix(self, prefix: str) -> None: ... # def setRange(self, min: float, max: float) -> None: ... def setSingleStep ( self , val : float ) -> None : ... # def setStepType(self, stepType: PySide6.QtWidgets.QAbstractSpinBox.StepType) -> None: ... # def setSuffix(self, suffix: str) -> None: ... def setValue ( self , val : float ) -> None : ... # def singleStep(self) -> float: ... # def stepType(self) -> PySide6.QtWidgets.QAbstractSpinBox.StepType: ... # def suffix(self) -> str: ... # def textFromValue(self, val: float) -> str: ... # def validate(self, input: str, pos: int) -> object: ... def value ( self ) -> float : ...","title":"QDoubleSpinBox"},{"location":"API_reference/#QtWidgets.QFormLayout","text":"Bases: QLayout summary Parameters: Name Type Description Default PySide6 _type_ description required Source code in QtWidgets.py 1897 1898 1899 1900 1901 1902 1903 1904 1905 1906 1907 1908 1909 1910 1911 1912 1913 1914 1915 1916 1917 1918 1919 1920 1921 1922 1923 1924 1925 1926 1927 1928 1929 1930 1931 1932 1933 1934 1935 1936 1937 1938 1939 1940 1941 1942 1943 1944 1945 1946 1947 1948 1949 class QFormLayout ( PySide6 . QtWidgets . QLayout ): \"\"\"_summary_ Args: PySide6 (_type_): _description_ \"\"\" class FieldGrowthPolicy ( enum . Enum ): FieldsStayAtSizeHint : QFormLayout . FieldGrowthPolicy = ... # 0x0 ExpandingFieldsGrow : QFormLayout . FieldGrowthPolicy = ... # 0x1 AllNonFixedFieldsGrow : QFormLayout . FieldGrowthPolicy = ... # 0x2 class ItemRole ( enum . Enum ): LabelRole : QFormLayout . ItemRole = ... # 0x0 FieldRole : QFormLayout . ItemRole = ... # 0x1 SpanningRole : QFormLayout . ItemRole = ... # 0x2 class RowWrapPolicy ( enum . Enum ): DontWrapRows : QFormLayout . RowWrapPolicy = ... # 0x0 WrapLongRows : QFormLayout . RowWrapPolicy = ... # 0x1 WrapAllRows : QFormLayout . RowWrapPolicy = ... # 0x2 class TakeRowResult ( Shiboken . Object ): @overload def __init__ ( self ) -> None : ... @overload def __init__ ( self , TakeRowResult : PySide6 . QtWidgets . QFormLayout . TakeRowResult ) -> None : ... @staticmethod def __copy__ () -> None : ... def __init__ ( self , parent : Optional [ PySide6 . QtWidgets . QWidget ] = ... ) -> None : ... def addItem ( self , item : PySide6 . QtWidgets . QLayoutItem ) -> None : ... @overload def addRow ( self , label : PySide6 . QtWidgets . QWidget , field : PySide6 . QtWidgets . QLayout ) -> None : ... @overload def addRow ( self , label : PySide6 . QtWidgets . QWidget , field : PySide6 . QtWidgets . QWidget ) -> None : ... @overload def addRow ( self , labelText : str , field : PySide6 . QtWidgets . QLayout ) -> None : ... @overload def addRow ( self , labelText : str , field : PySide6 . QtWidgets . QWidget ) -> None : ... @overload def addRow ( self , layout : PySide6 . QtWidgets . QLayout ) -> None : ... @overload def addRow ( self , widget : PySide6 . QtWidgets . QWidget ) -> None : ...","title":"QFormLayout"},{"location":"API_reference/#QtWidgets.QGroupBox","text":"Bases: QWidget summary Parameters: Name Type Description Default PySide6 _type_ description required Source code in QtWidgets.py 3797 3798 3799 3800 3801 3802 3803 3804 class QGroupBox ( PySide6 . QtWidgets . QWidget ): \"\"\"_summary_ Args: PySide6 (_type_): _description_ \"\"\" ...","title":"QGroupBox"},{"location":"API_reference/#QtWidgets.QHBoxLayout","text":"Bases: QBoxLayout summary Parameters: Name Type Description Default PySide6 _type_ description required Source code in QtWidgets.py 3836 3837 3838 3839 3840 3841 3842 3843 class QHBoxLayout ( PySide6 . QtWidgets . QBoxLayout ): \"\"\"_summary_ Args: PySide6 (_type_): _description_ \"\"\" ...","title":"QHBoxLayout"},{"location":"API_reference/#QtWidgets.QLabel","text":"Bases: QFrame summary Parameters: Name Type Description Default PySide6 _type_ description required Source code in QtWidgets.py 4195 4196 4197 4198 4199 4200 4201 4202 4203 4204 4205 4206 4207 4208 4209 4210 4211 4212 4213 4214 4215 4216 4217 4218 4219 4220 4221 4222 4223 4224 4225 4226 4227 4228 4229 4230 4231 4232 4233 4234 4235 4236 4237 4238 4239 4240 4241 4242 4243 4244 4245 4246 4247 4248 4249 4250 class QLabel ( PySide6 . QtWidgets . QFrame ): \"\"\"_summary_ Args: PySide6 (_type_): _description_ \"\"\" # linkActivated : ClassVar[Signal] = ... # linkActivated(QString) # linkHovered : ClassVar[Signal] = ... # linkHovered(QString) # @overload # def __init__(self, parent: Optional[PySide6.QtWidgets.QWidget] = ..., f: PySide6.QtCore.Qt.WindowType = ...) -> None: ... # @overload # def __init__(self, text: str, parent: Optional[PySide6.QtWidgets.QWidget] = ..., f: PySide6.QtCore.Qt.WindowType = ...) -> None: ... # def alignment(self) -> PySide6.QtCore.Qt.AlignmentFlag: ... # def buddy(self) -> PySide6.QtWidgets.QWidget: ... # def changeEvent(self, arg__1: PySide6.QtCore.QEvent) -> None: ... # def clear(self) -> None: ... # def contextMenuEvent(self, ev: PySide6.QtGui.QContextMenuEvent) -> None: ... # def event(self, e: PySide6.QtCore.QEvent) -> bool: ... # def focusInEvent(self, ev: PySide6.QtGui.QFocusEvent) -> None: ... # def focusNextPrevChild(self, next: bool) -> bool: ... # def focusOutEvent(self, ev: PySide6.QtGui.QFocusEvent) -> None: ... # def hasScaledContents(self) -> bool: ... # def hasSelectedText(self) -> bool: ... # def heightForWidth(self, arg__1: int) -> int: ... # def indent(self) -> int: ... # def keyPressEvent(self, ev: PySide6.QtGui.QKeyEvent) -> None: ... # def margin(self) -> int: ... # def minimumSizeHint(self) -> PySide6.QtCore.QSize: ... # def mouseMoveEvent(self, ev: PySide6.QtGui.QMouseEvent) -> None: ... # def mousePressEvent(self, ev: PySide6.QtGui.QMouseEvent) -> None: ... # def mouseReleaseEvent(self, ev: PySide6.QtGui.QMouseEvent) -> None: ... # def movie(self) -> PySide6.QtGui.QMovie: ... # def openExternalLinks(self) -> bool: ... # def paintEvent(self, arg__1: PySide6.QtGui.QPaintEvent) -> None: ... # def picture(self) -> PySide6.QtGui.QPicture: ... # def pixmap(self) -> PySide6.QtGui.QPixmap: ... # def selectedText(self) -> str: ... # def selectionStart(self) -> int: ... # def setAlignment(self, arg__1: PySide6.QtCore.Qt.AlignmentFlag) -> None: ... # def setBuddy(self, arg__1: PySide6.QtWidgets.QWidget) -> None: ... # def setIndent(self, arg__1: int) -> None: ... # def setMargin(self, arg__1: int) -> None: ... # def setMovie(self, movie: PySide6.QtGui.QMovie) -> None: ... # @overload # def setNum(self, arg__1: float) -> None: ... # @overload # def setNum(self, arg__1: int) -> None: ... # def setOpenExternalLinks(self, open: bool) -> None: ... # def setPicture(self, arg__1: Union[PySide6.QtGui.QPicture, int]) -> None: ... # def setPixmap(self, arg__1: Union[PySide6.QtGui.QPixmap, PySide6.QtGui.QImage, str]) -> None: ... # def setScaledContents(self, arg__1: bool) -> None: ... # def setSelection(self, arg__1: int, arg__2: int) -> None: ... def setText ( self , arg__1 : str ) -> None : ...","title":"QLabel"},{"location":"API_reference/#QtWidgets.QMainWindow","text":"Bases: QWidget summary Parameters: Name Type Description Default PySide6 _type_ description required Source code in QtWidgets.py 4738 4739 4740 4741 4742 4743 4744 4745 class QMainWindow ( PySide6 . QtWidgets . QWidget ): \"\"\"_summary_ Args: PySide6 (_type_): _description_ \"\"\" ...","title":"QMainWindow"},{"location":"API_reference/#QtWidgets.QPushButton","text":"Bases: QAbstractButton summary Parameters: Name Type Description Default PySide6 _type_ description required Source code in QtWidgets.py 5583 5584 5585 5586 5587 5588 5589 5590 5591 5592 class QPushButton ( PySide6 . QtWidgets . QAbstractButton ): \"\"\"_summary_ Args: PySide6 (_type_): _description_ \"\"\" clicked : ClassVar [ Signal ] = ... # clicked() def setText (): ...","title":"QPushButton"},{"location":"API_reference/#QtWidgets.QSpinBox","text":"Bases: QAbstractSpinBox summary Parameters: Name Type Description Default PySide6 _type_ description required Source code in QtWidgets.py 5951 5952 5953 5954 5955 5956 5957 5958 5959 5960 5961 5962 5963 5964 5965 5966 5967 5968 5969 5970 5971 5972 5973 5974 5975 5976 5977 5978 5979 5980 5981 5982 5983 5984 5985 5986 5987 class QSpinBox ( PySide6 . QtWidgets . QAbstractSpinBox ): \"\"\"_summary_ Args: PySide6 (_type_): _description_ \"\"\" textChanged : ClassVar [ Signal ] = ... # textChanged(QString) valueChanged : ClassVar [ Signal ] = ... # valueChanged(int) # def __init__(self, parent: Optional[PySide6.QtWidgets.QWidget] = ...) -> None: ... # def cleanText(self) -> str: ... # def displayIntegerBase(self) -> int: ... # def event(self, event: PySide6.QtCore.QEvent) -> bool: ... # def fixup(self, str: str) -> str: ... # def maximum(self) -> int: ... # def minimum(self) -> int: ... # def prefix(self) -> str: ... # def setDisplayIntegerBase(self, base: int) -> None: ... def setMaximum ( self , max : int ) -> None : ... def setMinimum ( self , min : int ) -> None : ... # def setPrefix(self, prefix: str) -> None: ... # def setRange(self, min: int, max: int) -> None: ... def setSingleStep ( self , val : int ) -> None : ... # def setStepType(self, stepType: PySide6.QtWidgets.QAbstractSpinBox.StepType) -> None: ... # def setSuffix(self, suffix: str) -> None: ... def setValue ( self , val : int ) -> None : ... # def singleStep(self) -> int: ... # def stepType(self) -> PySide6.QtWidgets.QAbstractSpinBox.StepType: ... # def suffix(self) -> str: ... # def textFromValue(self, val: int) -> str: ... # def validate(self, input: str, pos: int) -> object: ... def value ( self ) -> int : ...","title":"QSpinBox"},{"location":"API_reference/#QtWidgets.QTextEdit","text":"Bases: QAbstractScrollArea summary Parameters: Name Type Description Default PySide6 _type_ description required Source code in QtWidgets.py 8050 8051 8052 8053 8054 8055 8056 8057 8058 8059 8060 8061 8062 8063 8064 8065 8066 8067 8068 8069 8070 8071 8072 8073 8074 8075 8076 8077 8078 8079 8080 8081 8082 8083 8084 8085 8086 8087 8088 8089 8090 8091 8092 8093 8094 8095 8096 8097 8098 8099 8100 8101 8102 8103 8104 8105 8106 8107 8108 8109 8110 8111 8112 8113 8114 8115 8116 8117 8118 8119 8120 8121 8122 8123 8124 8125 8126 8127 8128 8129 8130 8131 8132 8133 8134 8135 8136 8137 8138 8139 8140 8141 8142 8143 8144 8145 8146 8147 8148 8149 8150 8151 8152 8153 8154 8155 8156 8157 8158 8159 8160 8161 8162 8163 8164 8165 8166 8167 8168 8169 8170 8171 8172 8173 8174 8175 8176 8177 8178 8179 8180 8181 8182 8183 8184 8185 8186 8187 8188 8189 8190 8191 8192 8193 8194 8195 8196 8197 8198 8199 8200 8201 8202 8203 8204 8205 8206 8207 8208 8209 8210 8211 8212 8213 8214 8215 8216 8217 8218 8219 8220 8221 8222 8223 8224 8225 8226 8227 8228 8229 8230 8231 8232 8233 8234 8235 8236 8237 8238 8239 8240 8241 8242 8243 8244 8245 8246 8247 8248 8249 8250 8251 8252 8253 8254 8255 8256 8257 8258 8259 8260 8261 8262 8263 8264 8265 8266 8267 8268 8269 8270 8271 class QTextEdit ( PySide6 . QtWidgets . QAbstractScrollArea ): \"\"\"_summary_ Args: PySide6 (_type_): _description_ \"\"\" copyAvailable : ClassVar [ Signal ] = ... # copyAvailable(bool) currentCharFormatChanged : ClassVar [ Signal ] = ( ... ) # currentCharFormatChanged(QTextCharFormat) cursorPositionChanged : ClassVar [ Signal ] = ... # cursorPositionChanged() redoAvailable : ClassVar [ Signal ] = ... # redoAvailable(bool) selectionChanged : ClassVar [ Signal ] = ... # selectionChanged() textChanged : ClassVar [ Signal ] = ... # textChanged() undoAvailable : ClassVar [ Signal ] = ... # undoAvailable(bool) class AutoFormattingFlag ( enum . Flag ): AutoAll : QTextEdit . AutoFormattingFlag = ... # -0x1 AutoNone : QTextEdit . AutoFormattingFlag = ... # 0x0 AutoBulletList : QTextEdit . AutoFormattingFlag = ... # 0x1 class ExtraSelection ( Shiboken . Object ): @overload def __init__ ( self ) -> None : ... @overload def __init__ ( self , ExtraSelection : PySide6 . QtWidgets . QTextEdit . ExtraSelection ) -> None : ... @staticmethod def __copy__ () -> None : ... class LineWrapMode ( enum . Enum ): NoWrap : QTextEdit . LineWrapMode = ... # 0x0 WidgetWidth : QTextEdit . LineWrapMode = ... # 0x1 FixedPixelWidth : QTextEdit . LineWrapMode = ... # 0x2 FixedColumnWidth : QTextEdit . LineWrapMode = ... # 0x3 @overload def __init__ ( self , parent : Optional [ PySide6 . QtWidgets . QWidget ] = ... ) -> None : ... @overload def __init__ ( self , text : str , parent : Optional [ PySide6 . QtWidgets . QWidget ] = ... ) -> None : ... def acceptRichText ( self ) -> bool : ... def alignment ( self ) -> PySide6 . QtCore . Qt . AlignmentFlag : ... def anchorAt ( self , pos : PySide6 . QtCore . QPoint ) -> str : ... def append ( self , text : str ) -> None : ... def autoFormatting ( self ) -> PySide6 . QtWidgets . QTextEdit . AutoFormattingFlag : ... def canInsertFromMimeData ( self , source : PySide6 . QtCore . QMimeData ) -> bool : ... def canPaste ( self ) -> bool : ... def changeEvent ( self , e : PySide6 . QtCore . QEvent ) -> None : ... def clear ( self ) -> None : ... def contextMenuEvent ( self , e : PySide6 . QtGui . QContextMenuEvent ) -> None : ... def copy ( self ) -> None : ... def createMimeDataFromSelection ( self ) -> PySide6 . QtCore . QMimeData : ... @overload def createStandardContextMenu ( self ) -> PySide6 . QtWidgets . QMenu : ... @overload def createStandardContextMenu ( self , position : PySide6 . QtCore . QPoint ) -> PySide6 . QtWidgets . QMenu : ... def currentCharFormat ( self ) -> PySide6 . QtGui . QTextCharFormat : ... def currentFont ( self ) -> PySide6 . QtGui . QFont : ... def cursorForPosition ( self , pos : PySide6 . QtCore . QPoint ) -> PySide6 . QtGui . QTextCursor : ... @overload def cursorRect ( self ) -> PySide6 . QtCore . QRect : ... @overload def cursorRect ( self , cursor : PySide6 . QtGui . QTextCursor ) -> PySide6 . QtCore . QRect : ... def cursorWidth ( self ) -> int : ... def cut ( self ) -> None : ... def doSetTextCursor ( self , cursor : PySide6 . QtGui . QTextCursor ) -> None : ... def document ( self ) -> PySide6 . QtGui . QTextDocument : ... def documentTitle ( self ) -> str : ... def dragEnterEvent ( self , e : PySide6 . QtGui . QDragEnterEvent ) -> None : ... def dragLeaveEvent ( self , e : PySide6 . QtGui . QDragLeaveEvent ) -> None : ... def dragMoveEvent ( self , e : PySide6 . QtGui . QDragMoveEvent ) -> None : ... def dropEvent ( self , e : PySide6 . QtGui . QDropEvent ) -> None : ... def ensureCursorVisible ( self ) -> None : ... def event ( self , e : PySide6 . QtCore . QEvent ) -> bool : ... def extraSelections ( self ) -> List [ PySide6 . QtWidgets . QTextEdit . ExtraSelection ]: ... @overload def find ( self , exp : str , options : PySide6 . QtGui . QTextDocument . FindFlag = ... ) -> bool : ... @overload def find ( self , exp : Union [ PySide6 . QtCore . QRegularExpression , str ], options : PySide6 . QtGui . QTextDocument . FindFlag = ... , ) -> bool : ... def focusInEvent ( self , e : PySide6 . QtGui . QFocusEvent ) -> None : ... def focusNextPrevChild ( self , next : bool ) -> bool : ... def focusOutEvent ( self , e : PySide6 . QtGui . QFocusEvent ) -> None : ... def fontFamily ( self ) -> str : ... def fontItalic ( self ) -> bool : ... def fontPointSize ( self ) -> float : ... def fontUnderline ( self ) -> bool : ... def fontWeight ( self ) -> int : ... def inputMethodEvent ( self , arg__1 : PySide6 . QtGui . QInputMethodEvent ) -> None : ... @overload def inputMethodQuery ( self , property : PySide6 . QtCore . Qt . InputMethodQuery ) -> Any : ... @overload def inputMethodQuery ( self , query : PySide6 . QtCore . Qt . InputMethodQuery , argument : Any ) -> Any : ... def insertFromMimeData ( self , source : PySide6 . QtCore . QMimeData ) -> None : ... def insertHtml ( self , text : str ) -> None : ... def insertPlainText ( self , text : str ) -> None : ... def isReadOnly ( self ) -> bool : ... def isUndoRedoEnabled ( self ) -> bool : ... def keyPressEvent ( self , e : PySide6 . QtGui . QKeyEvent ) -> None : ... def keyReleaseEvent ( self , e : PySide6 . QtGui . QKeyEvent ) -> None : ... def lineWrapColumnOrWidth ( self ) -> int : ... def lineWrapMode ( self ) -> PySide6 . QtWidgets . QTextEdit . LineWrapMode : ... def loadResource ( self , type : int , name : Union [ PySide6 . QtCore . QUrl , str ]) -> Any : ... def mergeCurrentCharFormat ( self , modifier : PySide6 . QtGui . QTextCharFormat ) -> None : ... def mouseDoubleClickEvent ( self , e : PySide6 . QtGui . QMouseEvent ) -> None : ... def mouseMoveEvent ( self , e : PySide6 . QtGui . QMouseEvent ) -> None : ... def mousePressEvent ( self , e : PySide6 . QtGui . QMouseEvent ) -> None : ... def mouseReleaseEvent ( self , e : PySide6 . QtGui . QMouseEvent ) -> None : ... def moveCursor ( self , operation : PySide6 . QtGui . QTextCursor . MoveOperation , mode : PySide6 . QtGui . QTextCursor . MoveMode = ... , ) -> None : ... def overwriteMode ( self ) -> bool : ... def paintEvent ( self , e : PySide6 . QtGui . QPaintEvent ) -> None : ... def paste ( self ) -> None : ... def placeholderText ( self ) -> str : ... def print_ ( self , printer : PySide6 . QtGui . QPagedPaintDevice ) -> None : ... def redo ( self ) -> None : ... def resizeEvent ( self , e : PySide6 . QtGui . QResizeEvent ) -> None : ... def scrollContentsBy ( self , dx : int , dy : int ) -> None : ... def scrollToAnchor ( self , name : str ) -> None : ... def selectAll ( self ) -> None : ... def setAcceptRichText ( self , accept : bool ) -> None : ... def setAlignment ( self , a : PySide6 . QtCore . Qt . AlignmentFlag ) -> None : ... def setAutoFormatting ( self , features : PySide6 . QtWidgets . QTextEdit . AutoFormattingFlag ) -> None : ... def setCurrentCharFormat ( self , format : PySide6 . QtGui . QTextCharFormat ) -> None : ... def setCurrentFont ( self , f : Union [ PySide6 . QtGui . QFont , str , Sequence [ str ]] ) -> None : ... def setCursorWidth ( self , width : int ) -> None : ... def setDocument ( self , document : PySide6 . QtGui . QTextDocument ) -> None : ... def setDocumentTitle ( self , title : str ) -> None : ... def setExtraSelections ( self , selections : Sequence [ PySide6 . QtWidgets . QTextEdit . ExtraSelection ] ) -> None : ... def setFontFamily ( self , fontFamily : str ) -> None : ... def setFontItalic ( self , b : bool ) -> None : ... def setFontPointSize ( self , s : float ) -> None : ... def setFontUnderline ( self , b : bool ) -> None : ... def setFontWeight ( self , w : int ) -> None : ... def setHtml ( self , text : str ) -> None : ... def setLineWrapColumnOrWidth ( self , w : int ) -> None : ... def setLineWrapMode ( self , mode : PySide6 . QtWidgets . QTextEdit . LineWrapMode ) -> None : ... def setMarkdown ( self , markdown : str ) -> None : ... def setOverwriteMode ( self , overwrite : bool ) -> None : ... def setPlaceholderText ( self , placeholderText : str ) -> None : ... def setPlainText ( self , text : str ) -> None : ... def setReadOnly ( self , ro : bool ) -> None : ... def setTabChangesFocus ( self , b : bool ) -> None : ... def setTabStopDistance ( self , distance : float ) -> None : ... def setText ( self , text : str ) -> None : ... def setTextBackgroundColor ( self , c : Union [ PySide6 . QtGui . QColor , PySide6 . QtGui . QRgba64 , Any , PySide6 . QtCore . Qt . GlobalColor , str , int , ], ) -> None : ... def setTextColor ( self , c : Union [ PySide6 . QtGui . QColor , PySide6 . QtGui . QRgba64 , Any , PySide6 . QtCore . Qt . GlobalColor , str , int , ], ) -> None : ... def setTextCursor ( self , cursor : PySide6 . QtGui . QTextCursor ) -> None : ... def setTextInteractionFlags ( self , flags : PySide6 . QtCore . Qt . TextInteractionFlag ) -> None : ... def setUndoRedoEnabled ( self , enable : bool ) -> None : ... def setWordWrapMode ( self , policy : PySide6 . QtGui . QTextOption . WrapMode ) -> None : ... def showEvent ( self , arg__1 : PySide6 . QtGui . QShowEvent ) -> None : ... def tabChangesFocus ( self ) -> bool : ... def tabStopDistance ( self ) -> float : ... def textBackgroundColor ( self ) -> PySide6 . QtGui . QColor : ... def textColor ( self ) -> PySide6 . QtGui . QColor : ... def textCursor ( self ) -> PySide6 . QtGui . QTextCursor : ... def textInteractionFlags ( self ) -> PySide6 . QtCore . Qt . TextInteractionFlag : ... def timerEvent ( self , e : PySide6 . QtCore . QTimerEvent ) -> None : ... def toHtml ( self ) -> str : ... def toMarkdown ( self , features : PySide6 . QtGui . QTextDocument . MarkdownFeature = ... ) -> str : ... def toPlainText ( self ) -> str : ... def undo ( self ) -> None : ... def wheelEvent ( self , e : PySide6 . QtGui . QWheelEvent ) -> None : ... def wordWrapMode ( self ) -> PySide6 . QtGui . QTextOption . WrapMode : ... def zoomIn ( self , range : int = ... ) -> None : ... def zoomInF ( self , range : float ) -> None : ... def zoomOut ( self , range : int = ... ) -> None : ...","title":"QTextEdit"},{"location":"API_reference/#QtWidgets.QVBoxLayout","text":"Bases: QBoxLayout summary Parameters: Name Type Description Default PySide6 _type_ description required Source code in QtWidgets.py 8772 8773 8774 8775 8776 8777 8778 8779 8780 8781 8782 class QVBoxLayout ( PySide6 . QtWidgets . QBoxLayout ): \"\"\"_summary_ Args: PySide6 (_type_): _description_ \"\"\" @overload def __init__ ( self ) -> None : ... @overload def __init__ ( self , parent : PySide6 . QtWidgets . QWidget ) -> None : ...","title":"QVBoxLayout"},{"location":"User_Guide/","text":"","title":"User Guide"}]}