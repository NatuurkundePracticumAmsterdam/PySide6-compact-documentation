{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"","title":"Home"},{"location":"API_reference/","text":"Reference This file contains the exact signatures for all functions in module PySide6.QtWidgets, except for defaults which are replaced by \"...\". QCheckBox Bases: QAbstractButton summary Parameters: Name Type Description Default PySide6 _type_ description required Source code in QtWidgets.py 840 841 842 843 844 845 846 847 848 849 class QCheckBox ( PySide6 . QtWidgets . QAbstractButton ): \"\"\"_summary_ Args: PySide6 (_type_): _description_ \"\"\" def IsChecked (): \"\"\"_summary_\"\"\" ... IsChecked () summary Source code in QtWidgets.py 847 848 849 def IsChecked (): \"\"\"_summary_\"\"\" ... QComboBox Bases: QWidget summary Parameters: Name Type Description Default PySide6 _type_ description required Source code in QtWidgets.py 975 976 977 978 979 980 981 982 983 984 985 986 987 988 989 990 991 992 993 994 995 996 997 998 999 1000 1001 1002 1003 1004 1005 1006 1007 1008 1009 1010 1011 1012 1013 1014 1015 1016 1017 1018 1019 1020 1021 1022 1023 1024 1025 1026 1027 1028 1029 1030 1031 1032 1033 1034 1035 1036 1037 1038 1039 1040 1041 1042 1043 1044 1045 1046 1047 1048 1049 1050 1051 1052 1053 1054 1055 1056 1057 1058 1059 1060 1061 1062 1063 1064 1065 1066 1067 1068 1069 1070 1071 1072 1073 1074 1075 1076 1077 1078 1079 1080 1081 1082 1083 1084 1085 1086 1087 1088 1089 1090 1091 1092 1093 1094 1095 1096 1097 1098 1099 1100 1101 1102 1103 1104 1105 1106 1107 1108 1109 1110 1111 1112 1113 1114 1115 1116 1117 1118 1119 1120 1121 1122 1123 1124 1125 1126 1127 1128 1129 1130 1131 1132 1133 1134 1135 1136 1137 1138 1139 1140 1141 1142 1143 1144 1145 1146 1147 1148 1149 1150 class QComboBox ( PySide6 . QtWidgets . QWidget ): \"\"\"_summary_ Args: PySide6 (_type_): _description_ \"\"\" # activated : ClassVar[Signal] = ... # activated(int) currentIndexChanged : ClassVar [ Signal ] = ... # currentIndexChanged(int) # currentTextChanged : ClassVar[Signal] = ... # currentTextChanged(QString) # editTextChanged : ClassVar[Signal] = ... # editTextChanged(QString) # highlighted : ClassVar[Signal] = ... # highlighted(int) # textActivated : ClassVar[Signal] = ... # textActivated(QString) # textHighlighted : ClassVar[Signal] = ... # textHighlighted(QString) class InsertPolicy ( enum . Enum ): \"\"\"_summary_ Args: enum (_type_): _description_ \"\"\" NoInsert : QComboBox . InsertPolicy = ... # 0x0 InsertAtTop : QComboBox . InsertPolicy = ... # 0x1 InsertAtCurrent : QComboBox . InsertPolicy = ... # 0x2 InsertAtBottom : QComboBox . InsertPolicy = ... # 0x3 InsertAfterCurrent : QComboBox . InsertPolicy = ... # 0x4 InsertBeforeCurrent : QComboBox . InsertPolicy = ... # 0x5 InsertAlphabetically : QComboBox . InsertPolicy = ... # 0x6 class SizeAdjustPolicy ( enum . Enum ): \"\"\"_summary_ Args: enum (_type_): _description_ \"\"\" AdjustToContents : QComboBox . SizeAdjustPolicy = ... # 0x0 AdjustToContentsOnFirstShow : QComboBox . SizeAdjustPolicy = ... # 0x1 AdjustToMinimumContentsLengthWithIcon : QComboBox . SizeAdjustPolicy = ... # 0x2 def __init__ ( self , parent : Optional [ PySide6 . QtWidgets . QWidget ] = ... ) -> None : ... @overload def addItem ( self , icon : Union [ PySide6 . QtGui . QIcon , PySide6 . QtGui . QPixmap ], text : str , userData : Any = ... , ) -> None : \"\"\"_summary_ Args: icon (Union[PySide6.QtGui.QIcon, PySide6.QtGui.QPixmap]): _description_ text (str): _description_ userData (Any, optional): _description_. Defaults to .... \"\"\" ... @overload def addItem ( self , text : str , userData : Any = ... ) -> None : \"\"\"_summary_ Args: text (str): _description_ userData (Any, optional): _description_. Defaults to .... \"\"\" ... def addItems ( self , texts : Sequence [ str ]) -> None : \"\"\"_summary_ Args: texts (Sequence[str]): _description_ Example: > addItems([\"item1\", \"item2\", \"item3\"]) \"\"\" ... # def changeEvent(self, e: PySide6.QtCore.QEvent) -> None: ... def clear ( self ) -> None : \"\"\"_summary_\"\"\" ... # def clearEditText(self) -> None: ... # def completer(self) -> PySide6.QtWidgets.QCompleter: ... # def contextMenuEvent(self, e: PySide6.QtGui.QContextMenuEvent) -> None: ... # def count(self) -> int: ... # def currentData(self, role: int = ...) -> Any: ... def currentIndex ( self ) -> int : \"\"\"_summary_ Returns: int: _description_ \"\"\" ... def currentText ( self ) -> str : \"\"\"_summary_ Returns: str: _description_ \"\"\" ... # def duplicatesEnabled(self) -> bool: ... # def event(self, event: PySide6.QtCore.QEvent) -> bool: ... # def findData(self, data: Any, role: int = ..., flags: PySide6.QtCore.Qt.MatchFlag = ...) -> int: ... # def findText(self, text: str, flags: PySide6.QtCore.Qt.MatchFlag = ...) -> int: ... # def focusInEvent(self, e: PySide6.QtGui.QFocusEvent) -> None: ... # def focusOutEvent(self, e: PySide6.QtGui.QFocusEvent) -> None: ... # def hasFrame(self) -> bool: ... # def hideEvent(self, e: PySide6.QtGui.QHideEvent) -> None: ... # def hidePopup(self) -> None: ... # def iconSize(self) -> PySide6.QtCore.QSize: ... # def initStyleOption(self, option: PySide6.QtWidgets.QStyleOptionComboBox) -> None: ... # def inputMethodEvent(self, arg__1: PySide6.QtGui.QInputMethodEvent) -> None: ... # @overload # def inputMethodQuery(self, arg__1: PySide6.QtCore.Qt.InputMethodQuery) -> Any: ... # @overload # def inputMethodQuery(self, query: PySide6.QtCore.Qt.InputMethodQuery, argument: Any) -> Any: ... # @overload # def insertItem(self, index: int, icon: Union[PySide6.QtGui.QIcon, PySide6.QtGui.QPixmap], text: str, userData: Any = ...) -> None: ... # @overload # def insertItem(self, index: int, text: str, userData: Any = ...) -> None: ... # def insertItems(self, index: int, texts: Sequence[str]) -> None: ... # def insertPolicy(self) -> PySide6.QtWidgets.QComboBox.InsertPolicy: ... # def insertSeparator(self, index: int) -> None: ... # def isEditable(self) -> bool: ... # def itemData(self, index: int, role: int = ...) -> Any: ... # def itemDelegate(self) -> PySide6.QtWidgets.QAbstractItemDelegate: ... # def itemIcon(self, index: int) -> PySide6.QtGui.QIcon: ... # def itemText(self, index: int) -> str: ... # def keyPressEvent(self, e: PySide6.QtGui.QKeyEvent) -> None: ... # def keyReleaseEvent(self, e: PySide6.QtGui.QKeyEvent) -> None: ... # def lineEdit(self) -> PySide6.QtWidgets.QLineEdit: ... # def maxCount(self) -> int: ... # def maxVisibleItems(self) -> int: ... # def minimumContentsLength(self) -> int: ... # def minimumSizeHint(self) -> PySide6.QtCore.QSize: ... # def model(self) -> PySide6.QtCore.QAbstractItemModel: ... # def modelColumn(self) -> int: ... # def mousePressEvent(self, e: PySide6.QtGui.QMouseEvent) -> None: ... # def mouseReleaseEvent(self, e: PySide6.QtGui.QMouseEvent) -> None: ... # def paintEvent(self, e: PySide6.QtGui.QPaintEvent) -> None: ... # def placeholderText(self) -> str: ... def removeItem ( self , index : int ) -> None : \"\"\"_summary_ Args: index (int): _description_ \"\"\" ... # def resizeEvent(self, e: PySide6.QtGui.QResizeEvent) -> None: ... # def rootModelIndex(self) -> PySide6.QtCore.QModelIndex: ... # def setCompleter(self, c: PySide6.QtWidgets.QCompleter) -> None: ... def setCurrentIndex ( self , index : int ) -> None : \"\"\"_summary_ Args: index (int): _description_ \"\"\" ... def setCurrentText ( self , text : str ) -> None : \"\"\"_summary_ Args: text (str): _description_ \"\"\" ... def setText (): \"\"\"_summary_\"\"\" ... InsertPolicy Bases: Enum summary Parameters: Name Type Description Default enum _type_ description required Source code in QtWidgets.py 990 991 992 993 994 995 996 997 998 999 1000 1001 1002 1003 class InsertPolicy ( enum . Enum ): \"\"\"_summary_ Args: enum (_type_): _description_ \"\"\" NoInsert : QComboBox . InsertPolicy = ... # 0x0 InsertAtTop : QComboBox . InsertPolicy = ... # 0x1 InsertAtCurrent : QComboBox . InsertPolicy = ... # 0x2 InsertAtBottom : QComboBox . InsertPolicy = ... # 0x3 InsertAfterCurrent : QComboBox . InsertPolicy = ... # 0x4 InsertBeforeCurrent : QComboBox . InsertPolicy = ... # 0x5 InsertAlphabetically : QComboBox . InsertPolicy = ... # 0x6 SizeAdjustPolicy Bases: Enum summary Parameters: Name Type Description Default enum _type_ description required Source code in QtWidgets.py 1005 1006 1007 1008 1009 1010 1011 1012 1013 1014 class SizeAdjustPolicy ( enum . Enum ): \"\"\"_summary_ Args: enum (_type_): _description_ \"\"\" AdjustToContents : QComboBox . SizeAdjustPolicy = ... # 0x0 AdjustToContentsOnFirstShow : QComboBox . SizeAdjustPolicy = ... # 0x1 AdjustToMinimumContentsLengthWithIcon : QComboBox . SizeAdjustPolicy = ... # 0x2 addItems ( texts ) summary Parameters: Name Type Description Default texts Sequence [ str ] description required Example addItems([\"item1\", \"item2\", \"item3\"]) Source code in QtWidgets.py 1043 1044 1045 1046 1047 1048 1049 1050 1051 1052 def addItems ( self , texts : Sequence [ str ]) -> None : \"\"\"_summary_ Args: texts (Sequence[str]): _description_ Example: > addItems([\"item1\", \"item2\", \"item3\"]) \"\"\" ... clear () summary Source code in QtWidgets.py 1055 1056 1057 def clear ( self ) -> None : \"\"\"_summary_\"\"\" ... currentIndex () summary Returns: Name Type Description int int description Source code in QtWidgets.py 1064 1065 1066 1067 1068 1069 1070 def currentIndex ( self ) -> int : \"\"\"_summary_ Returns: int: _description_ \"\"\" ... currentText () summary Returns: Name Type Description str str description Source code in QtWidgets.py 1072 1073 1074 1075 1076 1077 1078 def currentText ( self ) -> str : \"\"\"_summary_ Returns: str: _description_ \"\"\" ... removeItem ( index ) summary Parameters: Name Type Description Default index int description required Source code in QtWidgets.py 1121 1122 1123 1124 1125 1126 1127 def removeItem ( self , index : int ) -> None : \"\"\"_summary_ Args: index (int): _description_ \"\"\" ... setCurrentIndex ( index ) summary Parameters: Name Type Description Default index int description required Source code in QtWidgets.py 1132 1133 1134 1135 1136 1137 1138 def setCurrentIndex ( self , index : int ) -> None : \"\"\"_summary_ Args: index (int): _description_ \"\"\" ... setCurrentText ( text ) summary Parameters: Name Type Description Default text str description required Source code in QtWidgets.py 1140 1141 1142 1143 1144 1145 1146 def setCurrentText ( self , text : str ) -> None : \"\"\"_summary_ Args: text (str): _description_ \"\"\" ... setText () summary Source code in QtWidgets.py 1148 1149 1150 def setText (): \"\"\"_summary_\"\"\" ... QDoubleSpinBox Bases: QAbstractSpinBox summary Parameters: Name Type Description Default PySide6 _type_ description required Source code in QtWidgets.py 1615 1616 1617 1618 1619 1620 1621 1622 1623 1624 1625 1626 1627 1628 1629 1630 1631 1632 1633 1634 1635 1636 1637 1638 1639 1640 1641 1642 1643 1644 1645 1646 1647 1648 1649 1650 1651 1652 1653 1654 1655 1656 1657 1658 1659 1660 1661 1662 1663 1664 1665 1666 1667 1668 1669 1670 1671 1672 1673 1674 1675 1676 1677 1678 1679 1680 1681 class QDoubleSpinBox ( PySide6 . QtWidgets . QAbstractSpinBox ): \"\"\"_summary_ Args: PySide6 (_type_): _description_ \"\"\" textChanged : ClassVar [ Signal ] = ... # textChanged(QString) valueChanged : ClassVar [ Signal ] = ... # valueChanged(double) # def __init__(self, parent: Optional[PySide6.QtWidgets.QWidget] = ...) -> None: ... # def cleanText(self) -> str: ... # def decimals(self) -> int: ... # def fixup(self, str: str) -> str: ... # def maximum(self) -> float: ... # def minimum(self) -> float: ... # def prefix(self) -> str: ... # def setDecimals(self, prec: int) -> None: ... def setMaximum ( self , max : float ) -> None : \"\"\"_summary_ Args: max (float): _description_ \"\"\" ... def setMinimum ( self , min : float ) -> None : \"\"\"_summary_ Args: min (float): _description_ \"\"\" ... # def setPrefix(self, prefix: str) -> None: ... # def setRange(self, min: float, max: float) -> None: ... def setSingleStep ( self , val : float ) -> None : \"\"\"_summary_ Args: val (float): _description_ \"\"\" ... # def setStepType(self, stepType: PySide6.QtWidgets.QAbstractSpinBox.StepType) -> None: ... # def setSuffix(self, suffix: str) -> None: ... def setValue ( self , val : float ) -> None : \"\"\"_summary_ Args: val (float): _description_ \"\"\" ... # def singleStep(self) -> float: ... # def stepType(self) -> PySide6.QtWidgets.QAbstractSpinBox.StepType: ... # def suffix(self) -> str: ... # def textFromValue(self, val: float) -> str: ... # def validate(self, input: str, pos: int) -> object: ... def value ( self ) -> float : \"\"\"_summary_ Returns: float: _description_ \"\"\" ... setMaximum ( max ) summary Parameters: Name Type Description Default max float description required Source code in QtWidgets.py 1634 1635 1636 1637 1638 1639 1640 def setMaximum ( self , max : float ) -> None : \"\"\"_summary_ Args: max (float): _description_ \"\"\" ... setMinimum ( min ) summary Parameters: Name Type Description Default min float description required Source code in QtWidgets.py 1642 1643 1644 1645 1646 1647 1648 def setMinimum ( self , min : float ) -> None : \"\"\"_summary_ Args: min (float): _description_ \"\"\" ... setSingleStep ( val ) summary Parameters: Name Type Description Default val float description required Source code in QtWidgets.py 1652 1653 1654 1655 1656 1657 1658 def setSingleStep ( self , val : float ) -> None : \"\"\"_summary_ Args: val (float): _description_ \"\"\" ... setValue ( val ) summary Parameters: Name Type Description Default val float description required Source code in QtWidgets.py 1662 1663 1664 1665 1666 1667 1668 def setValue ( self , val : float ) -> None : \"\"\"_summary_ Args: val (float): _description_ \"\"\" ... value () summary Returns: Name Type Description float float description Source code in QtWidgets.py 1675 1676 1677 1678 1679 1680 1681 def value ( self ) -> float : \"\"\"_summary_ Returns: float: _description_ \"\"\" ... QFormLayout Bases: QLayout summary Parameters: Name Type Description Default PySide6 _type_ description required Source code in QtWidgets.py 2003 2004 2005 2006 2007 2008 2009 2010 2011 2012 2013 2014 2015 2016 2017 2018 2019 2020 2021 2022 2023 2024 2025 2026 2027 2028 2029 2030 2031 2032 2033 2034 2035 2036 2037 2038 2039 2040 2041 2042 2043 2044 2045 2046 2047 2048 2049 2050 2051 2052 2053 2054 2055 2056 2057 2058 2059 2060 2061 2062 2063 2064 2065 2066 2067 2068 2069 2070 2071 2072 2073 2074 2075 2076 2077 2078 2079 2080 2081 2082 2083 2084 2085 2086 2087 2088 2089 2090 2091 2092 2093 2094 2095 2096 2097 2098 2099 2100 2101 2102 2103 2104 2105 2106 2107 class QFormLayout ( PySide6 . QtWidgets . QLayout ): \"\"\"_summary_ Args: PySide6 (_type_): _description_ \"\"\" class FieldGrowthPolicy ( enum . Enum ): FieldsStayAtSizeHint : QFormLayout . FieldGrowthPolicy = ... # 0x0 ExpandingFieldsGrow : QFormLayout . FieldGrowthPolicy = ... # 0x1 AllNonFixedFieldsGrow : QFormLayout . FieldGrowthPolicy = ... # 0x2 class ItemRole ( enum . Enum ): LabelRole : QFormLayout . ItemRole = ... # 0x0 FieldRole : QFormLayout . ItemRole = ... # 0x1 SpanningRole : QFormLayout . ItemRole = ... # 0x2 class RowWrapPolicy ( enum . Enum ): DontWrapRows : QFormLayout . RowWrapPolicy = ... # 0x0 WrapLongRows : QFormLayout . RowWrapPolicy = ... # 0x1 WrapAllRows : QFormLayout . RowWrapPolicy = ... # 0x2 class TakeRowResult ( Shiboken . Object ): @overload def __init__ ( self ) -> None : ... @overload def __init__ ( self , TakeRowResult : PySide6 . QtWidgets . QFormLayout . TakeRowResult ) -> None : ... @staticmethod def __copy__ () -> None : ... def __init__ ( self , parent : Optional [ PySide6 . QtWidgets . QWidget ] = ... ) -> None : ... def addItem ( self , item : PySide6 . QtWidgets . QLayoutItem ) -> None : \"\"\"_summary_ Args: item (PySide6.QtWidgets.QLayoutItem): _description_ \"\"\" ... @overload def addRow ( self , label : PySide6 . QtWidgets . QWidget , field : PySide6 . QtWidgets . QLayout ) -> None : \"\"\"_summary_ Args: label (PySide6.QtWidgets.QWidget): _description_ field (PySide6.QtWidgets.QLayout): _description_ \"\"\" ... @overload def addRow ( self , label : PySide6 . QtWidgets . QWidget , field : PySide6 . QtWidgets . QWidget ) -> None : \"\"\"_summary_ Args: label (PySide6.QtWidgets.QWidget): _description_ field (PySide6.QtWidgets.QWidget): _description_ \"\"\" ... @overload def addRow ( self , labelText : str , field : PySide6 . QtWidgets . QLayout ) -> None : \"\"\"_summary_ Args: labelText (str): _description_ field (PySide6.QtWidgets.QLayout): _description_ \"\"\" ... @overload def addRow ( self , labelText : str , field : PySide6 . QtWidgets . QWidget ) -> None : \"\"\"_summary_ Args: labelText (str): _description_ field (PySide6.QtWidgets.QWidget): _description_ \"\"\" ... @overload def addRow ( self , layout : PySide6 . QtWidgets . QLayout ) -> None : \"\"\"_summary_ Args: layout (PySide6.QtWidgets.QLayout): _description_ \"\"\" ... @overload def addRow ( self , widget : PySide6 . QtWidgets . QWidget ) -> None : \"\"\"_summary_ Args: widget (PySide6.QtWidgets.QWidget): _description_ \"\"\" ... addItem ( item ) summary Parameters: Name Type Description Default item QLayoutItem description required Source code in QtWidgets.py 2039 2040 2041 2042 2043 2044 2045 def addItem ( self , item : PySide6 . QtWidgets . QLayoutItem ) -> None : \"\"\"_summary_ Args: item (PySide6.QtWidgets.QLayoutItem): _description_ \"\"\" ... QGroupBox Bases: QWidget summary Parameters: Name Type Description Default PySide6 _type_ description required Source code in QtWidgets.py 3955 3956 3957 3958 3959 3960 3961 3962 class QGroupBox ( PySide6 . QtWidgets . QWidget ): \"\"\"_summary_ Args: PySide6 (_type_): _description_ \"\"\" ... QHBoxLayout Bases: QBoxLayout summary Parameters: Name Type Description Default PySide6 _type_ description required Source code in QtWidgets.py 3994 3995 3996 3997 3998 3999 4000 4001 class QHBoxLayout ( PySide6 . QtWidgets . QBoxLayout ): \"\"\"_summary_ Args: PySide6 (_type_): _description_ \"\"\" ... QLabel Bases: QFrame summary Parameters: Name Type Description Default PySide6 _type_ description required Source code in QtWidgets.py 4353 4354 4355 4356 4357 4358 4359 4360 4361 4362 4363 4364 4365 4366 4367 4368 4369 4370 4371 4372 4373 4374 4375 4376 4377 4378 4379 4380 4381 4382 4383 4384 4385 4386 4387 4388 4389 4390 4391 4392 4393 4394 4395 4396 4397 4398 4399 4400 4401 4402 4403 4404 4405 4406 4407 4408 4409 4410 4411 4412 4413 4414 class QLabel ( PySide6 . QtWidgets . QFrame ): \"\"\"_summary_ Args: PySide6 (_type_): _description_ \"\"\" # linkActivated : ClassVar[Signal] = ... # linkActivated(QString) # linkHovered : ClassVar[Signal] = ... # linkHovered(QString) # @overload # def __init__(self, parent: Optional[PySide6.QtWidgets.QWidget] = ..., f: PySide6.QtCore.Qt.WindowType = ...) -> None: ... # @overload # def __init__(self, text: str, parent: Optional[PySide6.QtWidgets.QWidget] = ..., f: PySide6.QtCore.Qt.WindowType = ...) -> None: ... # def alignment(self) -> PySide6.QtCore.Qt.AlignmentFlag: ... # def buddy(self) -> PySide6.QtWidgets.QWidget: ... # def changeEvent(self, arg__1: PySide6.QtCore.QEvent) -> None: ... # def clear(self) -> None: ... # def contextMenuEvent(self, ev: PySide6.QtGui.QContextMenuEvent) -> None: ... # def event(self, e: PySide6.QtCore.QEvent) -> bool: ... # def focusInEvent(self, ev: PySide6.QtGui.QFocusEvent) -> None: ... # def focusNextPrevChild(self, next: bool) -> bool: ... # def focusOutEvent(self, ev: PySide6.QtGui.QFocusEvent) -> None: ... # def hasScaledContents(self) -> bool: ... # def hasSelectedText(self) -> bool: ... # def heightForWidth(self, arg__1: int) -> int: ... # def indent(self) -> int: ... # def keyPressEvent(self, ev: PySide6.QtGui.QKeyEvent) -> None: ... # def margin(self) -> int: ... # def minimumSizeHint(self) -> PySide6.QtCore.QSize: ... # def mouseMoveEvent(self, ev: PySide6.QtGui.QMouseEvent) -> None: ... # def mousePressEvent(self, ev: PySide6.QtGui.QMouseEvent) -> None: ... # def mouseReleaseEvent(self, ev: PySide6.QtGui.QMouseEvent) -> None: ... # def movie(self) -> PySide6.QtGui.QMovie: ... # def openExternalLinks(self) -> bool: ... # def paintEvent(self, arg__1: PySide6.QtGui.QPaintEvent) -> None: ... # def picture(self) -> PySide6.QtGui.QPicture: ... # def pixmap(self) -> PySide6.QtGui.QPixmap: ... # def selectedText(self) -> str: ... # def selectionStart(self) -> int: ... # def setAlignment(self, arg__1: PySide6.QtCore.Qt.AlignmentFlag) -> None: ... # def setBuddy(self, arg__1: PySide6.QtWidgets.QWidget) -> None: ... # def setIndent(self, arg__1: int) -> None: ... # def setMargin(self, arg__1: int) -> None: ... # def setMovie(self, movie: PySide6.QtGui.QMovie) -> None: ... # @overload # def setNum(self, arg__1: float) -> None: ... # @overload # def setNum(self, arg__1: int) -> None: ... # def setOpenExternalLinks(self, open: bool) -> None: ... # def setPicture(self, arg__1: Union[PySide6.QtGui.QPicture, int]) -> None: ... # def setPixmap(self, arg__1: Union[PySide6.QtGui.QPixmap, PySide6.QtGui.QImage, str]) -> None: ... # def setScaledContents(self, arg__1: bool) -> None: ... # def setSelection(self, arg__1: int, arg__2: int) -> None: ... def setText ( self , arg__1 : str ) -> None : \"\"\"_summary_ Args: arg__1 (str): _description_ \"\"\" ... setText ( arg__1 ) summary Parameters: Name Type Description Default arg__1 str description required Source code in QtWidgets.py 4408 4409 4410 4411 4412 4413 4414 def setText ( self , arg__1 : str ) -> None : \"\"\"_summary_ Args: arg__1 (str): _description_ \"\"\" ... QMainWindow Bases: QWidget summary Parameters: Name Type Description Default PySide6 _type_ description required Source code in QtWidgets.py 4902 4903 4904 4905 4906 4907 4908 4909 class QMainWindow ( PySide6 . QtWidgets . QWidget ): \"\"\"_summary_ Args: PySide6 (_type_): _description_ \"\"\" ... QPushButton Bases: QAbstractButton summary Parameters: Name Type Description Default PySide6 _type_ description required Source code in QtWidgets.py 5747 5748 5749 5750 5751 5752 5753 5754 5755 5756 5757 5758 class QPushButton ( PySide6 . QtWidgets . QAbstractButton ): \"\"\"_summary_ Args: PySide6 (_type_): _description_ \"\"\" clicked : ClassVar [ Signal ] = ... # clicked() def setText (): \"\"\"_summary_\"\"\" ... setText () summary Source code in QtWidgets.py 5756 5757 5758 def setText (): \"\"\"_summary_\"\"\" ... QSpinBox Bases: QAbstractSpinBox summary Parameters: Name Type Description Default PySide6 _type_ description required Source code in QtWidgets.py 6117 6118 6119 6120 6121 6122 6123 6124 6125 6126 6127 6128 6129 6130 6131 6132 6133 6134 6135 6136 6137 6138 6139 6140 6141 6142 6143 6144 6145 6146 6147 6148 6149 6150 6151 6152 6153 6154 6155 6156 6157 6158 6159 6160 6161 6162 6163 6164 6165 6166 6167 6168 6169 6170 6171 6172 6173 6174 6175 6176 6177 6178 6179 6180 6181 6182 6183 6184 class QSpinBox ( PySide6 . QtWidgets . QAbstractSpinBox ): \"\"\"_summary_ Args: PySide6 (_type_): _description_ \"\"\" textChanged : ClassVar [ Signal ] = ... # textChanged(QString) valueChanged : ClassVar [ Signal ] = ... # valueChanged(int) # def __init__(self, parent: Optional[PySide6.QtWidgets.QWidget] = ...) -> None: ... # def cleanText(self) -> str: ... # def displayIntegerBase(self) -> int: ... # def event(self, event: PySide6.QtCore.QEvent) -> bool: ... # def fixup(self, str: str) -> str: ... # def maximum(self) -> int: ... # def minimum(self) -> int: ... # def prefix(self) -> str: ... # def setDisplayIntegerBase(self, base: int) -> None: ... def setMaximum ( self , max : int ) -> None : \"\"\"_summary_ Args: max (int): _description_ \"\"\" ... def setMinimum ( self , min : int ) -> None : \"\"\"_summary_ Args: min (int): _description_ \"\"\" ... # def setPrefix(self, prefix: str) -> None: ... # def setRange(self, min: int, max: int) -> None: ... def setSingleStep ( self , val : int ) -> None : \"\"\"_summary_ Args: val (int): _description_ \"\"\" ... # def setStepType(self, stepType: PySide6.QtWidgets.QAbstractSpinBox.StepType) -> None: ... # def setSuffix(self, suffix: str) -> None: ... def setValue ( self , val : int ) -> None : \"\"\"_summary_ Args: val (int): _description_ \"\"\" ... # def singleStep(self) -> int: ... # def stepType(self) -> PySide6.QtWidgets.QAbstractSpinBox.StepType: ... # def suffix(self) -> str: ... # def textFromValue(self, val: int) -> str: ... # def validate(self, input: str, pos: int) -> object: ... def value ( self ) -> int : \"\"\"_summary_ Returns: int: _description_ \"\"\" ... setMaximum ( max ) summary Parameters: Name Type Description Default max int description required Source code in QtWidgets.py 6137 6138 6139 6140 6141 6142 6143 def setMaximum ( self , max : int ) -> None : \"\"\"_summary_ Args: max (int): _description_ \"\"\" ... setMinimum ( min ) summary Parameters: Name Type Description Default min int description required Source code in QtWidgets.py 6145 6146 6147 6148 6149 6150 6151 def setMinimum ( self , min : int ) -> None : \"\"\"_summary_ Args: min (int): _description_ \"\"\" ... setSingleStep ( val ) summary Parameters: Name Type Description Default val int description required Source code in QtWidgets.py 6155 6156 6157 6158 6159 6160 6161 def setSingleStep ( self , val : int ) -> None : \"\"\"_summary_ Args: val (int): _description_ \"\"\" ... setValue ( val ) summary Parameters: Name Type Description Default val int description required Source code in QtWidgets.py 6165 6166 6167 6168 6169 6170 6171 def setValue ( self , val : int ) -> None : \"\"\"_summary_ Args: val (int): _description_ \"\"\" ... value () summary Returns: Name Type Description int int description Source code in QtWidgets.py 6178 6179 6180 6181 6182 6183 6184 def value ( self ) -> int : \"\"\"_summary_ Returns: int: _description_ \"\"\" ... QTextEdit Bases: QAbstractScrollArea summary Parameters: Name Type Description Default PySide6 _type_ description required Source code in QtWidgets.py 8247 8248 8249 8250 8251 8252 8253 8254 8255 8256 8257 8258 8259 8260 8261 8262 8263 8264 8265 8266 8267 8268 8269 8270 8271 8272 8273 8274 8275 8276 8277 8278 8279 8280 8281 8282 8283 8284 8285 8286 8287 8288 8289 8290 8291 8292 8293 8294 8295 8296 8297 8298 8299 8300 8301 8302 8303 8304 8305 8306 8307 8308 8309 8310 8311 8312 8313 8314 8315 8316 8317 8318 8319 8320 8321 8322 8323 8324 8325 8326 8327 8328 8329 8330 8331 8332 8333 8334 8335 8336 8337 8338 8339 8340 8341 8342 8343 8344 8345 8346 8347 8348 8349 8350 8351 8352 8353 8354 8355 8356 8357 8358 8359 8360 8361 8362 8363 8364 8365 8366 8367 8368 8369 8370 8371 8372 8373 8374 8375 8376 8377 8378 8379 8380 8381 8382 8383 8384 8385 8386 8387 8388 8389 8390 8391 8392 8393 8394 8395 8396 8397 8398 8399 8400 8401 8402 8403 8404 8405 8406 8407 8408 8409 8410 8411 8412 8413 8414 8415 8416 8417 8418 8419 8420 8421 8422 8423 8424 8425 8426 8427 8428 8429 8430 8431 8432 8433 8434 8435 8436 8437 8438 8439 8440 8441 8442 8443 8444 8445 8446 8447 8448 8449 8450 8451 8452 8453 8454 8455 8456 8457 8458 8459 8460 8461 8462 8463 8464 8465 8466 8467 8468 8469 8470 8471 8472 8473 8474 8475 8476 8477 8478 8479 8480 8481 8482 8483 8484 8485 8486 8487 8488 8489 8490 8491 8492 8493 8494 8495 8496 8497 8498 8499 8500 8501 8502 8503 8504 8505 8506 8507 8508 8509 8510 8511 8512 8513 8514 8515 8516 8517 8518 8519 8520 8521 8522 8523 8524 8525 8526 8527 8528 8529 8530 8531 8532 8533 8534 8535 8536 8537 8538 8539 8540 8541 8542 8543 8544 8545 8546 8547 8548 8549 8550 8551 8552 8553 8554 8555 8556 8557 8558 8559 8560 8561 8562 8563 8564 8565 8566 8567 8568 8569 8570 8571 8572 8573 8574 8575 8576 8577 8578 8579 8580 8581 8582 8583 8584 8585 8586 8587 8588 8589 8590 8591 8592 8593 8594 8595 8596 8597 8598 8599 8600 8601 8602 8603 8604 8605 8606 8607 8608 8609 8610 8611 8612 8613 8614 8615 8616 8617 8618 8619 8620 8621 8622 8623 8624 8625 8626 8627 8628 8629 8630 8631 8632 8633 8634 8635 8636 8637 8638 8639 8640 8641 8642 8643 8644 8645 8646 8647 8648 8649 8650 8651 8652 8653 8654 8655 8656 8657 8658 8659 8660 8661 8662 8663 8664 8665 8666 8667 8668 8669 8670 8671 8672 8673 8674 8675 8676 8677 8678 8679 8680 8681 8682 8683 8684 8685 8686 8687 8688 8689 8690 8691 8692 8693 8694 8695 8696 8697 8698 8699 8700 8701 8702 8703 8704 8705 8706 8707 8708 8709 8710 8711 8712 8713 8714 8715 8716 8717 8718 8719 8720 8721 8722 8723 8724 8725 8726 8727 8728 8729 8730 8731 8732 8733 class QTextEdit ( PySide6 . QtWidgets . QAbstractScrollArea ): \"\"\"_summary_ Args: PySide6 (_type_): _description_ \"\"\" copyAvailable : ClassVar [ Signal ] = ... # copyAvailable(bool) currentCharFormatChanged : ClassVar [ Signal ] = ( ... ) # currentCharFormatChanged(QTextCharFormat) cursorPositionChanged : ClassVar [ Signal ] = ... # cursorPositionChanged() redoAvailable : ClassVar [ Signal ] = ... # redoAvailable(bool) selectionChanged : ClassVar [ Signal ] = ... # selectionChanged() textChanged : ClassVar [ Signal ] = ... # textChanged() undoAvailable : ClassVar [ Signal ] = ... # undoAvailable(bool) class AutoFormattingFlag ( enum . Flag ): AutoAll : QTextEdit . AutoFormattingFlag = ... # -0x1 AutoNone : QTextEdit . AutoFormattingFlag = ... # 0x0 AutoBulletList : QTextEdit . AutoFormattingFlag = ... # 0x1 class ExtraSelection ( Shiboken . Object ): @overload def __init__ ( self ) -> None : ... @overload def __init__ ( self , ExtraSelection : PySide6 . QtWidgets . QTextEdit . ExtraSelection ) -> None : ... @staticmethod def __copy__ () -> None : ... class LineWrapMode ( enum . Enum ): NoWrap : QTextEdit . LineWrapMode = ... # 0x0 WidgetWidth : QTextEdit . LineWrapMode = ... # 0x1 FixedPixelWidth : QTextEdit . LineWrapMode = ... # 0x2 FixedColumnWidth : QTextEdit . LineWrapMode = ... # 0x3 @overload def __init__ ( self , parent : Optional [ PySide6 . QtWidgets . QWidget ] = ... ) -> None : ... @overload def __init__ ( self , text : str , parent : Optional [ PySide6 . QtWidgets . QWidget ] = ... ) -> None : ... def acceptRichText ( self ) -> bool : \"\"\"_summary_ Returns: bool: _description_ \"\"\" ... def alignment ( self ) -> PySide6 . QtCore . Qt . AlignmentFlag : \"\"\"_summary_ Returns: PySide6.QtCore.Qt.AlignmentFlag: _description_ \"\"\" ... def anchorAt ( self , pos : PySide6 . QtCore . QPoint ) -> str : \"\"\"_summary_ Args: pos (PySide6.QtCore.QPoint): _description_ Returns: str: _description_ \"\"\" ... def append ( self , text : str ) -> None : \"\"\"_summary_ Args: text (str): _description_ \"\"\" ... def autoFormatting ( self ) -> PySide6 . QtWidgets . QTextEdit . AutoFormattingFlag : \"\"\"_summary_ Returns: PySide6.QtWidgets.QTextEdit.AutoFormattingFlag: _description_ \"\"\" ... def canInsertFromMimeData ( self , source : PySide6 . QtCore . QMimeData ) -> bool : \"\"\"_summary_ Args: source (PySide6.QtCore.QMimeData): _description_ Returns: bool: _description_ \"\"\" ... def canPaste ( self ) -> bool : \"\"\"_summary_ Returns: bool: _description_ \"\"\" ... def changeEvent ( self , e : PySide6 . QtCore . QEvent ) -> None : \"\"\"_summary_ Args: e (PySide6.QtCore.QEvent): _description_ \"\"\" ... def clear ( self ) -> None : \"\"\"_summary_\"\"\" ... def contextMenuEvent ( self , e : PySide6 . QtGui . QContextMenuEvent ) -> None : \"\"\"_summary_ Args: e (PySide6.QtGui.QContextMenuEvent): _description_ \"\"\" ... def copy ( self ) -> None : \"\"\"_summary_\"\"\" ... def createMimeDataFromSelection ( self ) -> PySide6 . QtCore . QMimeData : \"\"\"_summary_ Returns: PySide6.QtCore.QMimeData: _description_ \"\"\" ... @overload def createStandardContextMenu ( self ) -> PySide6 . QtWidgets . QMenu : \"\"\"_summary_ Returns: PySide6.QtWidgets.QMenu: _description_ \"\"\" ... @overload def createStandardContextMenu ( self , position : PySide6 . QtCore . QPoint ) -> PySide6 . QtWidgets . QMenu : \"\"\"_summary_ Args: position (PySide6.QtCore.QPoint): _description_ Returns: PySide6.QtWidgets.QMenu: _description_ \"\"\" ... def currentCharFormat ( self ) -> PySide6 . QtGui . QTextCharFormat : \"\"\"_summary_ Returns: PySide6.QtGui.QTextCharFormat: _description_ \"\"\" ... def currentFont ( self ) -> PySide6 . QtGui . QFont : \"\"\"_summary_ Returns: PySide6.QtGui.QFont: _description_ \"\"\" ... def cursorForPosition ( self , pos : PySide6 . QtCore . QPoint ) -> PySide6 . QtGui . QTextCursor : \"\"\"_summary_ Args: pos (PySide6.QtCore.QPoint): _description_ Returns: PySide6.QtGui.QTextCursor: _description_ \"\"\" ... @overload def cursorRect ( self ) -> PySide6 . QtCore . QRect : \"\"\"_summary_ Returns: PySide6.QtCore.QRect: _description_ \"\"\" ... @overload def cursorRect ( self , cursor : PySide6 . QtGui . QTextCursor ) -> PySide6 . QtCore . QRect : \"\"\"_summary_ Args: cursor (PySide6.QtGui.QTextCursor): _description_ Returns: PySide6.QtCore.QRect: _description_ \"\"\" ... def cursorWidth ( self ) -> int : \"\"\"_summary_ Returns: int: _description_ \"\"\" ... def cut ( self ) -> None : \"\"\"_summary_\"\"\" ... def doSetTextCursor ( self , cursor : PySide6 . QtGui . QTextCursor ) -> None : \"\"\"_summary_ Args: cursor (PySide6.QtGui.QTextCursor): _description_ \"\"\" ... def document ( self ) -> PySide6 . QtGui . QTextDocument : \"\"\"_summary_ Returns: PySide6.QtGui.QTextDocument: _description_ \"\"\" ... def documentTitle ( self ) -> str : \"\"\"_summary_ Returns: str: _description_ \"\"\" ... def dragEnterEvent ( self , e : PySide6 . QtGui . QDragEnterEvent ) -> None : \"\"\"_summary_ Args: e (PySide6.QtGui.QDragEnterEvent): _description_ \"\"\" ... def dragLeaveEvent ( self , e : PySide6 . QtGui . QDragLeaveEvent ) -> None : \"\"\"_summary_ Args: e (PySide6.QtGui.QDragLeaveEvent): _description_ \"\"\" ... def dragMoveEvent ( self , e : PySide6 . QtGui . QDragMoveEvent ) -> None : \"\"\"_summary_ Args: e (PySide6.QtGui.QDragMoveEvent): _description_ \"\"\" ... def dropEvent ( self , e : PySide6 . QtGui . QDropEvent ) -> None : \"\"\"_summary_ Args: e (PySide6.QtGui.QDropEvent): _description_ \"\"\" ... def ensureCursorVisible ( self ) -> None : \"\"\"_summary_\"\"\" ... def event ( self , e : PySide6 . QtCore . QEvent ) -> bool : \"\"\"_summary_ Args: e (PySide6.QtCore.QEvent): _description_ Returns: bool: _description_ \"\"\" ... def extraSelections ( self ) -> List [ PySide6 . QtWidgets . QTextEdit . ExtraSelection ]: \"\"\"_summary_ Returns: List[PySide6.QtWidgets.QTextEdit.ExtraSelection]: _description_ \"\"\" ... @overload def find ( self , exp : str , options : PySide6 . QtGui . QTextDocument . FindFlag = ... ) -> bool : \"\"\"_summary_ Args: exp (str): _description_ options (PySide6.QtGui.QTextDocument.FindFlag, optional): _description_. Defaults to .... Returns: bool: _description_ \"\"\" ... @overload def find ( self , exp : Union [ PySide6 . QtCore . QRegularExpression , str ], options : PySide6 . QtGui . QTextDocument . FindFlag = ... , ) -> bool : \"\"\"_summary_ Args: exp (Union[PySide6.QtCore.QRegularExpression, str]): _description_ options (PySide6.QtGui.QTextDocument.FindFlag, optional): _description_. Defaults to .... Returns: bool: _description_ \"\"\" ... def focusInEvent ( self , e : PySide6 . QtGui . QFocusEvent ) -> None : \"\"\"_summary_ Args: e (PySide6.QtGui.QFocusEvent): _description_ \"\"\" ... def focusNextPrevChild ( self , next : bool ) -> bool : \"\"\"_summary_ Args: next (bool): _description_ Returns: bool: _description_ \"\"\" ... def focusOutEvent ( self , e : PySide6 . QtGui . QFocusEvent ) -> None : \"\"\"_summary_ Args: e (PySide6.QtGui.QFocusEvent): _description_ \"\"\" ... def fontFamily ( self ) -> str : ... def fontItalic ( self ) -> bool : ... def fontPointSize ( self ) -> float : ... def fontUnderline ( self ) -> bool : ... def fontWeight ( self ) -> int : ... def inputMethodEvent ( self , arg__1 : PySide6 . QtGui . QInputMethodEvent ) -> None : ... @overload def inputMethodQuery ( self , property : PySide6 . QtCore . Qt . InputMethodQuery ) -> Any : ... @overload def inputMethodQuery ( self , query : PySide6 . QtCore . Qt . InputMethodQuery , argument : Any ) -> Any : ... def insertFromMimeData ( self , source : PySide6 . QtCore . QMimeData ) -> None : ... def insertHtml ( self , text : str ) -> None : ... def insertPlainText ( self , text : str ) -> None : ... def isReadOnly ( self ) -> bool : ... def isUndoRedoEnabled ( self ) -> bool : ... def keyPressEvent ( self , e : PySide6 . QtGui . QKeyEvent ) -> None : ... def keyReleaseEvent ( self , e : PySide6 . QtGui . QKeyEvent ) -> None : ... def lineWrapColumnOrWidth ( self ) -> int : ... def lineWrapMode ( self ) -> PySide6 . QtWidgets . QTextEdit . LineWrapMode : ... def loadResource ( self , type : int , name : Union [ PySide6 . QtCore . QUrl , str ]) -> Any : ... def mergeCurrentCharFormat ( self , modifier : PySide6 . QtGui . QTextCharFormat ) -> None : ... def mouseDoubleClickEvent ( self , e : PySide6 . QtGui . QMouseEvent ) -> None : ... def mouseMoveEvent ( self , e : PySide6 . QtGui . QMouseEvent ) -> None : ... def mousePressEvent ( self , e : PySide6 . QtGui . QMouseEvent ) -> None : ... def mouseReleaseEvent ( self , e : PySide6 . QtGui . QMouseEvent ) -> None : ... def moveCursor ( self , operation : PySide6 . QtGui . QTextCursor . MoveOperation , mode : PySide6 . QtGui . QTextCursor . MoveMode = ... , ) -> None : ... def overwriteMode ( self ) -> bool : ... def paintEvent ( self , e : PySide6 . QtGui . QPaintEvent ) -> None : ... def paste ( self ) -> None : ... def placeholderText ( self ) -> str : ... def print_ ( self , printer : PySide6 . QtGui . QPagedPaintDevice ) -> None : ... def redo ( self ) -> None : ... def resizeEvent ( self , e : PySide6 . QtGui . QResizeEvent ) -> None : ... def scrollContentsBy ( self , dx : int , dy : int ) -> None : ... def scrollToAnchor ( self , name : str ) -> None : ... def selectAll ( self ) -> None : ... def setAcceptRichText ( self , accept : bool ) -> None : ... def setAlignment ( self , a : PySide6 . QtCore . Qt . AlignmentFlag ) -> None : ... def setAutoFormatting ( self , features : PySide6 . QtWidgets . QTextEdit . AutoFormattingFlag ) -> None : ... def setCurrentCharFormat ( self , format : PySide6 . QtGui . QTextCharFormat ) -> None : ... def setCurrentFont ( self , f : Union [ PySide6 . QtGui . QFont , str , Sequence [ str ]] ) -> None : ... def setCursorWidth ( self , width : int ) -> None : ... def setDocument ( self , document : PySide6 . QtGui . QTextDocument ) -> None : ... def setDocumentTitle ( self , title : str ) -> None : ... def setExtraSelections ( self , selections : Sequence [ PySide6 . QtWidgets . QTextEdit . ExtraSelection ] ) -> None : ... def setFontFamily ( self , fontFamily : str ) -> None : ... def setFontItalic ( self , b : bool ) -> None : ... def setFontPointSize ( self , s : float ) -> None : ... def setFontUnderline ( self , b : bool ) -> None : ... def setFontWeight ( self , w : int ) -> None : ... def setHtml ( self , text : str ) -> None : ... def setLineWrapColumnOrWidth ( self , w : int ) -> None : ... def setLineWrapMode ( self , mode : PySide6 . QtWidgets . QTextEdit . LineWrapMode ) -> None : ... def setMarkdown ( self , markdown : str ) -> None : ... def setOverwriteMode ( self , overwrite : bool ) -> None : ... def setPlaceholderText ( self , placeholderText : str ) -> None : ... def setPlainText ( self , text : str ) -> None : ... def setReadOnly ( self , ro : bool ) -> None : ... def setTabChangesFocus ( self , b : bool ) -> None : ... def setTabStopDistance ( self , distance : float ) -> None : ... def setText ( self , text : str ) -> None : ... def setTextBackgroundColor ( self , c : Union [ PySide6 . QtGui . QColor , PySide6 . QtGui . QRgba64 , Any , PySide6 . QtCore . Qt . GlobalColor , str , int , ], ) -> None : ... def setTextColor ( self , c : Union [ PySide6 . QtGui . QColor , PySide6 . QtGui . QRgba64 , Any , PySide6 . QtCore . Qt . GlobalColor , str , int , ], ) -> None : ... def setTextCursor ( self , cursor : PySide6 . QtGui . QTextCursor ) -> None : ... def setTextInteractionFlags ( self , flags : PySide6 . QtCore . Qt . TextInteractionFlag ) -> None : ... def setUndoRedoEnabled ( self , enable : bool ) -> None : ... def setWordWrapMode ( self , policy : PySide6 . QtGui . QTextOption . WrapMode ) -> None : ... def showEvent ( self , arg__1 : PySide6 . QtGui . QShowEvent ) -> None : ... def tabChangesFocus ( self ) -> bool : ... def tabStopDistance ( self ) -> float : ... def textBackgroundColor ( self ) -> PySide6 . QtGui . QColor : ... def textColor ( self ) -> PySide6 . QtGui . QColor : ... def textCursor ( self ) -> PySide6 . QtGui . QTextCursor : ... def textInteractionFlags ( self ) -> PySide6 . QtCore . Qt . TextInteractionFlag : ... def timerEvent ( self , e : PySide6 . QtCore . QTimerEvent ) -> None : ... def toHtml ( self ) -> str : ... def toMarkdown ( self , features : PySide6 . QtGui . QTextDocument . MarkdownFeature = ... ) -> str : ... def toPlainText ( self ) -> str : ... def undo ( self ) -> None : ... def wheelEvent ( self , e : PySide6 . QtGui . QWheelEvent ) -> None : ... def wordWrapMode ( self ) -> PySide6 . QtGui . QTextOption . WrapMode : ... def zoomIn ( self , range : int = ... ) -> None : ... def zoomInF ( self , range : float ) -> None : ... def zoomOut ( self , range : int = ... ) -> None : ... acceptRichText () summary Returns: Name Type Description bool bool description Source code in QtWidgets.py 8293 8294 8295 8296 8297 8298 8299 def acceptRichText ( self ) -> bool : \"\"\"_summary_ Returns: bool: _description_ \"\"\" ... alignment () summary Returns: Type Description AlignmentFlag PySide6.QtCore.Qt.AlignmentFlag: description Source code in QtWidgets.py 8301 8302 8303 8304 8305 8306 8307 def alignment ( self ) -> PySide6 . QtCore . Qt . AlignmentFlag : \"\"\"_summary_ Returns: PySide6.QtCore.Qt.AlignmentFlag: _description_ \"\"\" ... anchorAt ( pos ) summary Parameters: Name Type Description Default pos QPoint description required Returns: Name Type Description str str description Source code in QtWidgets.py 8309 8310 8311 8312 8313 8314 8315 8316 8317 8318 def anchorAt ( self , pos : PySide6 . QtCore . QPoint ) -> str : \"\"\"_summary_ Args: pos (PySide6.QtCore.QPoint): _description_ Returns: str: _description_ \"\"\" ... append ( text ) summary Parameters: Name Type Description Default text str description required Source code in QtWidgets.py 8320 8321 8322 8323 8324 8325 8326 def append ( self , text : str ) -> None : \"\"\"_summary_ Args: text (str): _description_ \"\"\" ... autoFormatting () summary Returns: Type Description AutoFormattingFlag PySide6.QtWidgets.QTextEdit.AutoFormattingFlag: description Source code in QtWidgets.py 8328 8329 8330 8331 8332 8333 8334 def autoFormatting ( self ) -> PySide6 . QtWidgets . QTextEdit . AutoFormattingFlag : \"\"\"_summary_ Returns: PySide6.QtWidgets.QTextEdit.AutoFormattingFlag: _description_ \"\"\" ... canInsertFromMimeData ( source ) summary Parameters: Name Type Description Default source QMimeData description required Returns: Name Type Description bool bool description Source code in QtWidgets.py 8336 8337 8338 8339 8340 8341 8342 8343 8344 8345 def canInsertFromMimeData ( self , source : PySide6 . QtCore . QMimeData ) -> bool : \"\"\"_summary_ Args: source (PySide6.QtCore.QMimeData): _description_ Returns: bool: _description_ \"\"\" ... canPaste () summary Returns: Name Type Description bool bool description Source code in QtWidgets.py 8347 8348 8349 8350 8351 8352 8353 def canPaste ( self ) -> bool : \"\"\"_summary_ Returns: bool: _description_ \"\"\" ... changeEvent ( e ) summary Parameters: Name Type Description Default e QEvent description required Source code in QtWidgets.py 8355 8356 8357 8358 8359 8360 8361 def changeEvent ( self , e : PySide6 . QtCore . QEvent ) -> None : \"\"\"_summary_ Args: e (PySide6.QtCore.QEvent): _description_ \"\"\" ... clear () summary Source code in QtWidgets.py 8363 8364 8365 def clear ( self ) -> None : \"\"\"_summary_\"\"\" ... contextMenuEvent ( e ) summary Parameters: Name Type Description Default e QContextMenuEvent description required Source code in QtWidgets.py 8367 8368 8369 8370 8371 8372 8373 def contextMenuEvent ( self , e : PySide6 . QtGui . QContextMenuEvent ) -> None : \"\"\"_summary_ Args: e (PySide6.QtGui.QContextMenuEvent): _description_ \"\"\" ... copy () summary Source code in QtWidgets.py 8375 8376 8377 def copy ( self ) -> None : \"\"\"_summary_\"\"\" ... createMimeDataFromSelection () summary Returns: Type Description QMimeData PySide6.QtCore.QMimeData: description Source code in QtWidgets.py 8379 8380 8381 8382 8383 8384 8385 def createMimeDataFromSelection ( self ) -> PySide6 . QtCore . QMimeData : \"\"\"_summary_ Returns: PySide6.QtCore.QMimeData: _description_ \"\"\" ... currentCharFormat () summary Returns: Type Description QTextCharFormat PySide6.QtGui.QTextCharFormat: description Source code in QtWidgets.py 8410 8411 8412 8413 8414 8415 8416 def currentCharFormat ( self ) -> PySide6 . QtGui . QTextCharFormat : \"\"\"_summary_ Returns: PySide6.QtGui.QTextCharFormat: _description_ \"\"\" ... currentFont () summary Returns: Type Description QFont PySide6.QtGui.QFont: description Source code in QtWidgets.py 8418 8419 8420 8421 8422 8423 8424 def currentFont ( self ) -> PySide6 . QtGui . QFont : \"\"\"_summary_ Returns: PySide6.QtGui.QFont: _description_ \"\"\" ... cursorForPosition ( pos ) summary Parameters: Name Type Description Default pos QPoint description required Returns: Type Description QTextCursor PySide6.QtGui.QTextCursor: description Source code in QtWidgets.py 8426 8427 8428 8429 8430 8431 8432 8433 8434 8435 8436 8437 def cursorForPosition ( self , pos : PySide6 . QtCore . QPoint ) -> PySide6 . QtGui . QTextCursor : \"\"\"_summary_ Args: pos (PySide6.QtCore.QPoint): _description_ Returns: PySide6.QtGui.QTextCursor: _description_ \"\"\" ... cursorWidth () summary Returns: Name Type Description int int description Source code in QtWidgets.py 8460 8461 8462 8463 8464 8465 8466 def cursorWidth ( self ) -> int : \"\"\"_summary_ Returns: int: _description_ \"\"\" ... cut () summary Source code in QtWidgets.py 8468 8469 8470 def cut ( self ) -> None : \"\"\"_summary_\"\"\" ... doSetTextCursor ( cursor ) summary Parameters: Name Type Description Default cursor QTextCursor description required Source code in QtWidgets.py 8472 8473 8474 8475 8476 8477 8478 def doSetTextCursor ( self , cursor : PySide6 . QtGui . QTextCursor ) -> None : \"\"\"_summary_ Args: cursor (PySide6.QtGui.QTextCursor): _description_ \"\"\" ... document () summary Returns: Type Description QTextDocument PySide6.QtGui.QTextDocument: description Source code in QtWidgets.py 8480 8481 8482 8483 8484 8485 8486 def document ( self ) -> PySide6 . QtGui . QTextDocument : \"\"\"_summary_ Returns: PySide6.QtGui.QTextDocument: _description_ \"\"\" ... documentTitle () summary Returns: Name Type Description str str description Source code in QtWidgets.py 8488 8489 8490 8491 8492 8493 8494 def documentTitle ( self ) -> str : \"\"\"_summary_ Returns: str: _description_ \"\"\" ... dragEnterEvent ( e ) summary Parameters: Name Type Description Default e QDragEnterEvent description required Source code in QtWidgets.py 8496 8497 8498 8499 8500 8501 8502 def dragEnterEvent ( self , e : PySide6 . QtGui . QDragEnterEvent ) -> None : \"\"\"_summary_ Args: e (PySide6.QtGui.QDragEnterEvent): _description_ \"\"\" ... dragLeaveEvent ( e ) summary Parameters: Name Type Description Default e QDragLeaveEvent description required Source code in QtWidgets.py 8504 8505 8506 8507 8508 8509 8510 def dragLeaveEvent ( self , e : PySide6 . QtGui . QDragLeaveEvent ) -> None : \"\"\"_summary_ Args: e (PySide6.QtGui.QDragLeaveEvent): _description_ \"\"\" ... dragMoveEvent ( e ) summary Parameters: Name Type Description Default e QDragMoveEvent description required Source code in QtWidgets.py 8512 8513 8514 8515 8516 8517 8518 def dragMoveEvent ( self , e : PySide6 . QtGui . QDragMoveEvent ) -> None : \"\"\"_summary_ Args: e (PySide6.QtGui.QDragMoveEvent): _description_ \"\"\" ... dropEvent ( e ) summary Parameters: Name Type Description Default e QDropEvent description required Source code in QtWidgets.py 8520 8521 8522 8523 8524 8525 8526 def dropEvent ( self , e : PySide6 . QtGui . QDropEvent ) -> None : \"\"\"_summary_ Args: e (PySide6.QtGui.QDropEvent): _description_ \"\"\" ... ensureCursorVisible () summary Source code in QtWidgets.py 8528 8529 8530 def ensureCursorVisible ( self ) -> None : \"\"\"_summary_\"\"\" ... event ( e ) summary Parameters: Name Type Description Default e QEvent description required Returns: Name Type Description bool bool description Source code in QtWidgets.py 8532 8533 8534 8535 8536 8537 8538 8539 8540 8541 def event ( self , e : PySide6 . QtCore . QEvent ) -> bool : \"\"\"_summary_ Args: e (PySide6.QtCore.QEvent): _description_ Returns: bool: _description_ \"\"\" ... extraSelections () summary Returns: Type Description List [ ExtraSelection ] List[PySide6.QtWidgets.QTextEdit.ExtraSelection]: description Source code in QtWidgets.py 8543 8544 8545 8546 8547 8548 8549 def extraSelections ( self ) -> List [ PySide6 . QtWidgets . QTextEdit . ExtraSelection ]: \"\"\"_summary_ Returns: List[PySide6.QtWidgets.QTextEdit.ExtraSelection]: _description_ \"\"\" ... focusInEvent ( e ) summary Parameters: Name Type Description Default e QFocusEvent description required Source code in QtWidgets.py 8583 8584 8585 8586 8587 8588 8589 def focusInEvent ( self , e : PySide6 . QtGui . QFocusEvent ) -> None : \"\"\"_summary_ Args: e (PySide6.QtGui.QFocusEvent): _description_ \"\"\" ... focusNextPrevChild ( next ) summary Parameters: Name Type Description Default next bool description required Returns: Name Type Description bool bool description Source code in QtWidgets.py 8591 8592 8593 8594 8595 8596 8597 8598 8599 8600 def focusNextPrevChild ( self , next : bool ) -> bool : \"\"\"_summary_ Args: next (bool): _description_ Returns: bool: _description_ \"\"\" ... focusOutEvent ( e ) summary Parameters: Name Type Description Default e QFocusEvent description required Source code in QtWidgets.py 8602 8603 8604 8605 8606 8607 8608 def focusOutEvent ( self , e : PySide6 . QtGui . QFocusEvent ) -> None : \"\"\"_summary_ Args: e (PySide6.QtGui.QFocusEvent): _description_ \"\"\" ... QVBoxLayout Bases: QBoxLayout summary Parameters: Name Type Description Default PySide6 _type_ description required Source code in QtWidgets.py 9234 9235 9236 9237 9238 9239 9240 9241 9242 9243 9244 class QVBoxLayout ( PySide6 . QtWidgets . QBoxLayout ): \"\"\"_summary_ Args: PySide6 (_type_): _description_ \"\"\" @overload def __init__ ( self ) -> None : ... @overload def __init__ ( self , parent : PySide6 . QtWidgets . QWidget ) -> None : ...","title":"Reference"},{"location":"API_reference/#reference","text":"This file contains the exact signatures for all functions in module PySide6.QtWidgets, except for defaults which are replaced by \"...\".","title":"Reference"},{"location":"API_reference/#QtWidgets.QCheckBox","text":"Bases: QAbstractButton summary Parameters: Name Type Description Default PySide6 _type_ description required Source code in QtWidgets.py 840 841 842 843 844 845 846 847 848 849 class QCheckBox ( PySide6 . QtWidgets . QAbstractButton ): \"\"\"_summary_ Args: PySide6 (_type_): _description_ \"\"\" def IsChecked (): \"\"\"_summary_\"\"\" ...","title":"QCheckBox"},{"location":"API_reference/#QtWidgets.QCheckBox.IsChecked","text":"summary Source code in QtWidgets.py 847 848 849 def IsChecked (): \"\"\"_summary_\"\"\" ...","title":"IsChecked"},{"location":"API_reference/#QtWidgets.QComboBox","text":"Bases: QWidget summary Parameters: Name Type Description Default PySide6 _type_ description required Source code in QtWidgets.py 975 976 977 978 979 980 981 982 983 984 985 986 987 988 989 990 991 992 993 994 995 996 997 998 999 1000 1001 1002 1003 1004 1005 1006 1007 1008 1009 1010 1011 1012 1013 1014 1015 1016 1017 1018 1019 1020 1021 1022 1023 1024 1025 1026 1027 1028 1029 1030 1031 1032 1033 1034 1035 1036 1037 1038 1039 1040 1041 1042 1043 1044 1045 1046 1047 1048 1049 1050 1051 1052 1053 1054 1055 1056 1057 1058 1059 1060 1061 1062 1063 1064 1065 1066 1067 1068 1069 1070 1071 1072 1073 1074 1075 1076 1077 1078 1079 1080 1081 1082 1083 1084 1085 1086 1087 1088 1089 1090 1091 1092 1093 1094 1095 1096 1097 1098 1099 1100 1101 1102 1103 1104 1105 1106 1107 1108 1109 1110 1111 1112 1113 1114 1115 1116 1117 1118 1119 1120 1121 1122 1123 1124 1125 1126 1127 1128 1129 1130 1131 1132 1133 1134 1135 1136 1137 1138 1139 1140 1141 1142 1143 1144 1145 1146 1147 1148 1149 1150 class QComboBox ( PySide6 . QtWidgets . QWidget ): \"\"\"_summary_ Args: PySide6 (_type_): _description_ \"\"\" # activated : ClassVar[Signal] = ... # activated(int) currentIndexChanged : ClassVar [ Signal ] = ... # currentIndexChanged(int) # currentTextChanged : ClassVar[Signal] = ... # currentTextChanged(QString) # editTextChanged : ClassVar[Signal] = ... # editTextChanged(QString) # highlighted : ClassVar[Signal] = ... # highlighted(int) # textActivated : ClassVar[Signal] = ... # textActivated(QString) # textHighlighted : ClassVar[Signal] = ... # textHighlighted(QString) class InsertPolicy ( enum . Enum ): \"\"\"_summary_ Args: enum (_type_): _description_ \"\"\" NoInsert : QComboBox . InsertPolicy = ... # 0x0 InsertAtTop : QComboBox . InsertPolicy = ... # 0x1 InsertAtCurrent : QComboBox . InsertPolicy = ... # 0x2 InsertAtBottom : QComboBox . InsertPolicy = ... # 0x3 InsertAfterCurrent : QComboBox . InsertPolicy = ... # 0x4 InsertBeforeCurrent : QComboBox . InsertPolicy = ... # 0x5 InsertAlphabetically : QComboBox . InsertPolicy = ... # 0x6 class SizeAdjustPolicy ( enum . Enum ): \"\"\"_summary_ Args: enum (_type_): _description_ \"\"\" AdjustToContents : QComboBox . SizeAdjustPolicy = ... # 0x0 AdjustToContentsOnFirstShow : QComboBox . SizeAdjustPolicy = ... # 0x1 AdjustToMinimumContentsLengthWithIcon : QComboBox . SizeAdjustPolicy = ... # 0x2 def __init__ ( self , parent : Optional [ PySide6 . QtWidgets . QWidget ] = ... ) -> None : ... @overload def addItem ( self , icon : Union [ PySide6 . QtGui . QIcon , PySide6 . QtGui . QPixmap ], text : str , userData : Any = ... , ) -> None : \"\"\"_summary_ Args: icon (Union[PySide6.QtGui.QIcon, PySide6.QtGui.QPixmap]): _description_ text (str): _description_ userData (Any, optional): _description_. Defaults to .... \"\"\" ... @overload def addItem ( self , text : str , userData : Any = ... ) -> None : \"\"\"_summary_ Args: text (str): _description_ userData (Any, optional): _description_. Defaults to .... \"\"\" ... def addItems ( self , texts : Sequence [ str ]) -> None : \"\"\"_summary_ Args: texts (Sequence[str]): _description_ Example: > addItems([\"item1\", \"item2\", \"item3\"]) \"\"\" ... # def changeEvent(self, e: PySide6.QtCore.QEvent) -> None: ... def clear ( self ) -> None : \"\"\"_summary_\"\"\" ... # def clearEditText(self) -> None: ... # def completer(self) -> PySide6.QtWidgets.QCompleter: ... # def contextMenuEvent(self, e: PySide6.QtGui.QContextMenuEvent) -> None: ... # def count(self) -> int: ... # def currentData(self, role: int = ...) -> Any: ... def currentIndex ( self ) -> int : \"\"\"_summary_ Returns: int: _description_ \"\"\" ... def currentText ( self ) -> str : \"\"\"_summary_ Returns: str: _description_ \"\"\" ... # def duplicatesEnabled(self) -> bool: ... # def event(self, event: PySide6.QtCore.QEvent) -> bool: ... # def findData(self, data: Any, role: int = ..., flags: PySide6.QtCore.Qt.MatchFlag = ...) -> int: ... # def findText(self, text: str, flags: PySide6.QtCore.Qt.MatchFlag = ...) -> int: ... # def focusInEvent(self, e: PySide6.QtGui.QFocusEvent) -> None: ... # def focusOutEvent(self, e: PySide6.QtGui.QFocusEvent) -> None: ... # def hasFrame(self) -> bool: ... # def hideEvent(self, e: PySide6.QtGui.QHideEvent) -> None: ... # def hidePopup(self) -> None: ... # def iconSize(self) -> PySide6.QtCore.QSize: ... # def initStyleOption(self, option: PySide6.QtWidgets.QStyleOptionComboBox) -> None: ... # def inputMethodEvent(self, arg__1: PySide6.QtGui.QInputMethodEvent) -> None: ... # @overload # def inputMethodQuery(self, arg__1: PySide6.QtCore.Qt.InputMethodQuery) -> Any: ... # @overload # def inputMethodQuery(self, query: PySide6.QtCore.Qt.InputMethodQuery, argument: Any) -> Any: ... # @overload # def insertItem(self, index: int, icon: Union[PySide6.QtGui.QIcon, PySide6.QtGui.QPixmap], text: str, userData: Any = ...) -> None: ... # @overload # def insertItem(self, index: int, text: str, userData: Any = ...) -> None: ... # def insertItems(self, index: int, texts: Sequence[str]) -> None: ... # def insertPolicy(self) -> PySide6.QtWidgets.QComboBox.InsertPolicy: ... # def insertSeparator(self, index: int) -> None: ... # def isEditable(self) -> bool: ... # def itemData(self, index: int, role: int = ...) -> Any: ... # def itemDelegate(self) -> PySide6.QtWidgets.QAbstractItemDelegate: ... # def itemIcon(self, index: int) -> PySide6.QtGui.QIcon: ... # def itemText(self, index: int) -> str: ... # def keyPressEvent(self, e: PySide6.QtGui.QKeyEvent) -> None: ... # def keyReleaseEvent(self, e: PySide6.QtGui.QKeyEvent) -> None: ... # def lineEdit(self) -> PySide6.QtWidgets.QLineEdit: ... # def maxCount(self) -> int: ... # def maxVisibleItems(self) -> int: ... # def minimumContentsLength(self) -> int: ... # def minimumSizeHint(self) -> PySide6.QtCore.QSize: ... # def model(self) -> PySide6.QtCore.QAbstractItemModel: ... # def modelColumn(self) -> int: ... # def mousePressEvent(self, e: PySide6.QtGui.QMouseEvent) -> None: ... # def mouseReleaseEvent(self, e: PySide6.QtGui.QMouseEvent) -> None: ... # def paintEvent(self, e: PySide6.QtGui.QPaintEvent) -> None: ... # def placeholderText(self) -> str: ... def removeItem ( self , index : int ) -> None : \"\"\"_summary_ Args: index (int): _description_ \"\"\" ... # def resizeEvent(self, e: PySide6.QtGui.QResizeEvent) -> None: ... # def rootModelIndex(self) -> PySide6.QtCore.QModelIndex: ... # def setCompleter(self, c: PySide6.QtWidgets.QCompleter) -> None: ... def setCurrentIndex ( self , index : int ) -> None : \"\"\"_summary_ Args: index (int): _description_ \"\"\" ... def setCurrentText ( self , text : str ) -> None : \"\"\"_summary_ Args: text (str): _description_ \"\"\" ... def setText (): \"\"\"_summary_\"\"\" ...","title":"QComboBox"},{"location":"API_reference/#QtWidgets.QComboBox.InsertPolicy","text":"Bases: Enum summary Parameters: Name Type Description Default enum _type_ description required Source code in QtWidgets.py 990 991 992 993 994 995 996 997 998 999 1000 1001 1002 1003 class InsertPolicy ( enum . Enum ): \"\"\"_summary_ Args: enum (_type_): _description_ \"\"\" NoInsert : QComboBox . InsertPolicy = ... # 0x0 InsertAtTop : QComboBox . InsertPolicy = ... # 0x1 InsertAtCurrent : QComboBox . InsertPolicy = ... # 0x2 InsertAtBottom : QComboBox . InsertPolicy = ... # 0x3 InsertAfterCurrent : QComboBox . InsertPolicy = ... # 0x4 InsertBeforeCurrent : QComboBox . InsertPolicy = ... # 0x5 InsertAlphabetically : QComboBox . InsertPolicy = ... # 0x6","title":"InsertPolicy"},{"location":"API_reference/#QtWidgets.QComboBox.SizeAdjustPolicy","text":"Bases: Enum summary Parameters: Name Type Description Default enum _type_ description required Source code in QtWidgets.py 1005 1006 1007 1008 1009 1010 1011 1012 1013 1014 class SizeAdjustPolicy ( enum . Enum ): \"\"\"_summary_ Args: enum (_type_): _description_ \"\"\" AdjustToContents : QComboBox . SizeAdjustPolicy = ... # 0x0 AdjustToContentsOnFirstShow : QComboBox . SizeAdjustPolicy = ... # 0x1 AdjustToMinimumContentsLengthWithIcon : QComboBox . SizeAdjustPolicy = ... # 0x2","title":"SizeAdjustPolicy"},{"location":"API_reference/#QtWidgets.QComboBox.addItems","text":"summary Parameters: Name Type Description Default texts Sequence [ str ] description required Example addItems([\"item1\", \"item2\", \"item3\"]) Source code in QtWidgets.py 1043 1044 1045 1046 1047 1048 1049 1050 1051 1052 def addItems ( self , texts : Sequence [ str ]) -> None : \"\"\"_summary_ Args: texts (Sequence[str]): _description_ Example: > addItems([\"item1\", \"item2\", \"item3\"]) \"\"\" ...","title":"addItems"},{"location":"API_reference/#QtWidgets.QComboBox.clear","text":"summary Source code in QtWidgets.py 1055 1056 1057 def clear ( self ) -> None : \"\"\"_summary_\"\"\" ...","title":"clear"},{"location":"API_reference/#QtWidgets.QComboBox.currentIndex","text":"summary Returns: Name Type Description int int description Source code in QtWidgets.py 1064 1065 1066 1067 1068 1069 1070 def currentIndex ( self ) -> int : \"\"\"_summary_ Returns: int: _description_ \"\"\" ...","title":"currentIndex"},{"location":"API_reference/#QtWidgets.QComboBox.currentText","text":"summary Returns: Name Type Description str str description Source code in QtWidgets.py 1072 1073 1074 1075 1076 1077 1078 def currentText ( self ) -> str : \"\"\"_summary_ Returns: str: _description_ \"\"\" ...","title":"currentText"},{"location":"API_reference/#QtWidgets.QComboBox.removeItem","text":"summary Parameters: Name Type Description Default index int description required Source code in QtWidgets.py 1121 1122 1123 1124 1125 1126 1127 def removeItem ( self , index : int ) -> None : \"\"\"_summary_ Args: index (int): _description_ \"\"\" ...","title":"removeItem"},{"location":"API_reference/#QtWidgets.QComboBox.setCurrentIndex","text":"summary Parameters: Name Type Description Default index int description required Source code in QtWidgets.py 1132 1133 1134 1135 1136 1137 1138 def setCurrentIndex ( self , index : int ) -> None : \"\"\"_summary_ Args: index (int): _description_ \"\"\" ...","title":"setCurrentIndex"},{"location":"API_reference/#QtWidgets.QComboBox.setCurrentText","text":"summary Parameters: Name Type Description Default text str description required Source code in QtWidgets.py 1140 1141 1142 1143 1144 1145 1146 def setCurrentText ( self , text : str ) -> None : \"\"\"_summary_ Args: text (str): _description_ \"\"\" ...","title":"setCurrentText"},{"location":"API_reference/#QtWidgets.QComboBox.setText","text":"summary Source code in QtWidgets.py 1148 1149 1150 def setText (): \"\"\"_summary_\"\"\" ...","title":"setText"},{"location":"API_reference/#QtWidgets.QDoubleSpinBox","text":"Bases: QAbstractSpinBox summary Parameters: Name Type Description Default PySide6 _type_ description required Source code in QtWidgets.py 1615 1616 1617 1618 1619 1620 1621 1622 1623 1624 1625 1626 1627 1628 1629 1630 1631 1632 1633 1634 1635 1636 1637 1638 1639 1640 1641 1642 1643 1644 1645 1646 1647 1648 1649 1650 1651 1652 1653 1654 1655 1656 1657 1658 1659 1660 1661 1662 1663 1664 1665 1666 1667 1668 1669 1670 1671 1672 1673 1674 1675 1676 1677 1678 1679 1680 1681 class QDoubleSpinBox ( PySide6 . QtWidgets . QAbstractSpinBox ): \"\"\"_summary_ Args: PySide6 (_type_): _description_ \"\"\" textChanged : ClassVar [ Signal ] = ... # textChanged(QString) valueChanged : ClassVar [ Signal ] = ... # valueChanged(double) # def __init__(self, parent: Optional[PySide6.QtWidgets.QWidget] = ...) -> None: ... # def cleanText(self) -> str: ... # def decimals(self) -> int: ... # def fixup(self, str: str) -> str: ... # def maximum(self) -> float: ... # def minimum(self) -> float: ... # def prefix(self) -> str: ... # def setDecimals(self, prec: int) -> None: ... def setMaximum ( self , max : float ) -> None : \"\"\"_summary_ Args: max (float): _description_ \"\"\" ... def setMinimum ( self , min : float ) -> None : \"\"\"_summary_ Args: min (float): _description_ \"\"\" ... # def setPrefix(self, prefix: str) -> None: ... # def setRange(self, min: float, max: float) -> None: ... def setSingleStep ( self , val : float ) -> None : \"\"\"_summary_ Args: val (float): _description_ \"\"\" ... # def setStepType(self, stepType: PySide6.QtWidgets.QAbstractSpinBox.StepType) -> None: ... # def setSuffix(self, suffix: str) -> None: ... def setValue ( self , val : float ) -> None : \"\"\"_summary_ Args: val (float): _description_ \"\"\" ... # def singleStep(self) -> float: ... # def stepType(self) -> PySide6.QtWidgets.QAbstractSpinBox.StepType: ... # def suffix(self) -> str: ... # def textFromValue(self, val: float) -> str: ... # def validate(self, input: str, pos: int) -> object: ... def value ( self ) -> float : \"\"\"_summary_ Returns: float: _description_ \"\"\" ...","title":"QDoubleSpinBox"},{"location":"API_reference/#QtWidgets.QDoubleSpinBox.setMaximum","text":"summary Parameters: Name Type Description Default max float description required Source code in QtWidgets.py 1634 1635 1636 1637 1638 1639 1640 def setMaximum ( self , max : float ) -> None : \"\"\"_summary_ Args: max (float): _description_ \"\"\" ...","title":"setMaximum"},{"location":"API_reference/#QtWidgets.QDoubleSpinBox.setMinimum","text":"summary Parameters: Name Type Description Default min float description required Source code in QtWidgets.py 1642 1643 1644 1645 1646 1647 1648 def setMinimum ( self , min : float ) -> None : \"\"\"_summary_ Args: min (float): _description_ \"\"\" ...","title":"setMinimum"},{"location":"API_reference/#QtWidgets.QDoubleSpinBox.setSingleStep","text":"summary Parameters: Name Type Description Default val float description required Source code in QtWidgets.py 1652 1653 1654 1655 1656 1657 1658 def setSingleStep ( self , val : float ) -> None : \"\"\"_summary_ Args: val (float): _description_ \"\"\" ...","title":"setSingleStep"},{"location":"API_reference/#QtWidgets.QDoubleSpinBox.setValue","text":"summary Parameters: Name Type Description Default val float description required Source code in QtWidgets.py 1662 1663 1664 1665 1666 1667 1668 def setValue ( self , val : float ) -> None : \"\"\"_summary_ Args: val (float): _description_ \"\"\" ...","title":"setValue"},{"location":"API_reference/#QtWidgets.QDoubleSpinBox.value","text":"summary Returns: Name Type Description float float description Source code in QtWidgets.py 1675 1676 1677 1678 1679 1680 1681 def value ( self ) -> float : \"\"\"_summary_ Returns: float: _description_ \"\"\" ...","title":"value"},{"location":"API_reference/#QtWidgets.QFormLayout","text":"Bases: QLayout summary Parameters: Name Type Description Default PySide6 _type_ description required Source code in QtWidgets.py 2003 2004 2005 2006 2007 2008 2009 2010 2011 2012 2013 2014 2015 2016 2017 2018 2019 2020 2021 2022 2023 2024 2025 2026 2027 2028 2029 2030 2031 2032 2033 2034 2035 2036 2037 2038 2039 2040 2041 2042 2043 2044 2045 2046 2047 2048 2049 2050 2051 2052 2053 2054 2055 2056 2057 2058 2059 2060 2061 2062 2063 2064 2065 2066 2067 2068 2069 2070 2071 2072 2073 2074 2075 2076 2077 2078 2079 2080 2081 2082 2083 2084 2085 2086 2087 2088 2089 2090 2091 2092 2093 2094 2095 2096 2097 2098 2099 2100 2101 2102 2103 2104 2105 2106 2107 class QFormLayout ( PySide6 . QtWidgets . QLayout ): \"\"\"_summary_ Args: PySide6 (_type_): _description_ \"\"\" class FieldGrowthPolicy ( enum . Enum ): FieldsStayAtSizeHint : QFormLayout . FieldGrowthPolicy = ... # 0x0 ExpandingFieldsGrow : QFormLayout . FieldGrowthPolicy = ... # 0x1 AllNonFixedFieldsGrow : QFormLayout . FieldGrowthPolicy = ... # 0x2 class ItemRole ( enum . Enum ): LabelRole : QFormLayout . ItemRole = ... # 0x0 FieldRole : QFormLayout . ItemRole = ... # 0x1 SpanningRole : QFormLayout . ItemRole = ... # 0x2 class RowWrapPolicy ( enum . Enum ): DontWrapRows : QFormLayout . RowWrapPolicy = ... # 0x0 WrapLongRows : QFormLayout . RowWrapPolicy = ... # 0x1 WrapAllRows : QFormLayout . RowWrapPolicy = ... # 0x2 class TakeRowResult ( Shiboken . Object ): @overload def __init__ ( self ) -> None : ... @overload def __init__ ( self , TakeRowResult : PySide6 . QtWidgets . QFormLayout . TakeRowResult ) -> None : ... @staticmethod def __copy__ () -> None : ... def __init__ ( self , parent : Optional [ PySide6 . QtWidgets . QWidget ] = ... ) -> None : ... def addItem ( self , item : PySide6 . QtWidgets . QLayoutItem ) -> None : \"\"\"_summary_ Args: item (PySide6.QtWidgets.QLayoutItem): _description_ \"\"\" ... @overload def addRow ( self , label : PySide6 . QtWidgets . QWidget , field : PySide6 . QtWidgets . QLayout ) -> None : \"\"\"_summary_ Args: label (PySide6.QtWidgets.QWidget): _description_ field (PySide6.QtWidgets.QLayout): _description_ \"\"\" ... @overload def addRow ( self , label : PySide6 . QtWidgets . QWidget , field : PySide6 . QtWidgets . QWidget ) -> None : \"\"\"_summary_ Args: label (PySide6.QtWidgets.QWidget): _description_ field (PySide6.QtWidgets.QWidget): _description_ \"\"\" ... @overload def addRow ( self , labelText : str , field : PySide6 . QtWidgets . QLayout ) -> None : \"\"\"_summary_ Args: labelText (str): _description_ field (PySide6.QtWidgets.QLayout): _description_ \"\"\" ... @overload def addRow ( self , labelText : str , field : PySide6 . QtWidgets . QWidget ) -> None : \"\"\"_summary_ Args: labelText (str): _description_ field (PySide6.QtWidgets.QWidget): _description_ \"\"\" ... @overload def addRow ( self , layout : PySide6 . QtWidgets . QLayout ) -> None : \"\"\"_summary_ Args: layout (PySide6.QtWidgets.QLayout): _description_ \"\"\" ... @overload def addRow ( self , widget : PySide6 . QtWidgets . QWidget ) -> None : \"\"\"_summary_ Args: widget (PySide6.QtWidgets.QWidget): _description_ \"\"\" ...","title":"QFormLayout"},{"location":"API_reference/#QtWidgets.QFormLayout.addItem","text":"summary Parameters: Name Type Description Default item QLayoutItem description required Source code in QtWidgets.py 2039 2040 2041 2042 2043 2044 2045 def addItem ( self , item : PySide6 . QtWidgets . QLayoutItem ) -> None : \"\"\"_summary_ Args: item (PySide6.QtWidgets.QLayoutItem): _description_ \"\"\" ...","title":"addItem"},{"location":"API_reference/#QtWidgets.QGroupBox","text":"Bases: QWidget summary Parameters: Name Type Description Default PySide6 _type_ description required Source code in QtWidgets.py 3955 3956 3957 3958 3959 3960 3961 3962 class QGroupBox ( PySide6 . QtWidgets . QWidget ): \"\"\"_summary_ Args: PySide6 (_type_): _description_ \"\"\" ...","title":"QGroupBox"},{"location":"API_reference/#QtWidgets.QHBoxLayout","text":"Bases: QBoxLayout summary Parameters: Name Type Description Default PySide6 _type_ description required Source code in QtWidgets.py 3994 3995 3996 3997 3998 3999 4000 4001 class QHBoxLayout ( PySide6 . QtWidgets . QBoxLayout ): \"\"\"_summary_ Args: PySide6 (_type_): _description_ \"\"\" ...","title":"QHBoxLayout"},{"location":"API_reference/#QtWidgets.QLabel","text":"Bases: QFrame summary Parameters: Name Type Description Default PySide6 _type_ description required Source code in QtWidgets.py 4353 4354 4355 4356 4357 4358 4359 4360 4361 4362 4363 4364 4365 4366 4367 4368 4369 4370 4371 4372 4373 4374 4375 4376 4377 4378 4379 4380 4381 4382 4383 4384 4385 4386 4387 4388 4389 4390 4391 4392 4393 4394 4395 4396 4397 4398 4399 4400 4401 4402 4403 4404 4405 4406 4407 4408 4409 4410 4411 4412 4413 4414 class QLabel ( PySide6 . QtWidgets . QFrame ): \"\"\"_summary_ Args: PySide6 (_type_): _description_ \"\"\" # linkActivated : ClassVar[Signal] = ... # linkActivated(QString) # linkHovered : ClassVar[Signal] = ... # linkHovered(QString) # @overload # def __init__(self, parent: Optional[PySide6.QtWidgets.QWidget] = ..., f: PySide6.QtCore.Qt.WindowType = ...) -> None: ... # @overload # def __init__(self, text: str, parent: Optional[PySide6.QtWidgets.QWidget] = ..., f: PySide6.QtCore.Qt.WindowType = ...) -> None: ... # def alignment(self) -> PySide6.QtCore.Qt.AlignmentFlag: ... # def buddy(self) -> PySide6.QtWidgets.QWidget: ... # def changeEvent(self, arg__1: PySide6.QtCore.QEvent) -> None: ... # def clear(self) -> None: ... # def contextMenuEvent(self, ev: PySide6.QtGui.QContextMenuEvent) -> None: ... # def event(self, e: PySide6.QtCore.QEvent) -> bool: ... # def focusInEvent(self, ev: PySide6.QtGui.QFocusEvent) -> None: ... # def focusNextPrevChild(self, next: bool) -> bool: ... # def focusOutEvent(self, ev: PySide6.QtGui.QFocusEvent) -> None: ... # def hasScaledContents(self) -> bool: ... # def hasSelectedText(self) -> bool: ... # def heightForWidth(self, arg__1: int) -> int: ... # def indent(self) -> int: ... # def keyPressEvent(self, ev: PySide6.QtGui.QKeyEvent) -> None: ... # def margin(self) -> int: ... # def minimumSizeHint(self) -> PySide6.QtCore.QSize: ... # def mouseMoveEvent(self, ev: PySide6.QtGui.QMouseEvent) -> None: ... # def mousePressEvent(self, ev: PySide6.QtGui.QMouseEvent) -> None: ... # def mouseReleaseEvent(self, ev: PySide6.QtGui.QMouseEvent) -> None: ... # def movie(self) -> PySide6.QtGui.QMovie: ... # def openExternalLinks(self) -> bool: ... # def paintEvent(self, arg__1: PySide6.QtGui.QPaintEvent) -> None: ... # def picture(self) -> PySide6.QtGui.QPicture: ... # def pixmap(self) -> PySide6.QtGui.QPixmap: ... # def selectedText(self) -> str: ... # def selectionStart(self) -> int: ... # def setAlignment(self, arg__1: PySide6.QtCore.Qt.AlignmentFlag) -> None: ... # def setBuddy(self, arg__1: PySide6.QtWidgets.QWidget) -> None: ... # def setIndent(self, arg__1: int) -> None: ... # def setMargin(self, arg__1: int) -> None: ... # def setMovie(self, movie: PySide6.QtGui.QMovie) -> None: ... # @overload # def setNum(self, arg__1: float) -> None: ... # @overload # def setNum(self, arg__1: int) -> None: ... # def setOpenExternalLinks(self, open: bool) -> None: ... # def setPicture(self, arg__1: Union[PySide6.QtGui.QPicture, int]) -> None: ... # def setPixmap(self, arg__1: Union[PySide6.QtGui.QPixmap, PySide6.QtGui.QImage, str]) -> None: ... # def setScaledContents(self, arg__1: bool) -> None: ... # def setSelection(self, arg__1: int, arg__2: int) -> None: ... def setText ( self , arg__1 : str ) -> None : \"\"\"_summary_ Args: arg__1 (str): _description_ \"\"\" ...","title":"QLabel"},{"location":"API_reference/#QtWidgets.QLabel.setText","text":"summary Parameters: Name Type Description Default arg__1 str description required Source code in QtWidgets.py 4408 4409 4410 4411 4412 4413 4414 def setText ( self , arg__1 : str ) -> None : \"\"\"_summary_ Args: arg__1 (str): _description_ \"\"\" ...","title":"setText"},{"location":"API_reference/#QtWidgets.QMainWindow","text":"Bases: QWidget summary Parameters: Name Type Description Default PySide6 _type_ description required Source code in QtWidgets.py 4902 4903 4904 4905 4906 4907 4908 4909 class QMainWindow ( PySide6 . QtWidgets . QWidget ): \"\"\"_summary_ Args: PySide6 (_type_): _description_ \"\"\" ...","title":"QMainWindow"},{"location":"API_reference/#QtWidgets.QPushButton","text":"Bases: QAbstractButton summary Parameters: Name Type Description Default PySide6 _type_ description required Source code in QtWidgets.py 5747 5748 5749 5750 5751 5752 5753 5754 5755 5756 5757 5758 class QPushButton ( PySide6 . QtWidgets . QAbstractButton ): \"\"\"_summary_ Args: PySide6 (_type_): _description_ \"\"\" clicked : ClassVar [ Signal ] = ... # clicked() def setText (): \"\"\"_summary_\"\"\" ...","title":"QPushButton"},{"location":"API_reference/#QtWidgets.QPushButton.setText","text":"summary Source code in QtWidgets.py 5756 5757 5758 def setText (): \"\"\"_summary_\"\"\" ...","title":"setText"},{"location":"API_reference/#QtWidgets.QSpinBox","text":"Bases: QAbstractSpinBox summary Parameters: Name Type Description Default PySide6 _type_ description required Source code in QtWidgets.py 6117 6118 6119 6120 6121 6122 6123 6124 6125 6126 6127 6128 6129 6130 6131 6132 6133 6134 6135 6136 6137 6138 6139 6140 6141 6142 6143 6144 6145 6146 6147 6148 6149 6150 6151 6152 6153 6154 6155 6156 6157 6158 6159 6160 6161 6162 6163 6164 6165 6166 6167 6168 6169 6170 6171 6172 6173 6174 6175 6176 6177 6178 6179 6180 6181 6182 6183 6184 class QSpinBox ( PySide6 . QtWidgets . QAbstractSpinBox ): \"\"\"_summary_ Args: PySide6 (_type_): _description_ \"\"\" textChanged : ClassVar [ Signal ] = ... # textChanged(QString) valueChanged : ClassVar [ Signal ] = ... # valueChanged(int) # def __init__(self, parent: Optional[PySide6.QtWidgets.QWidget] = ...) -> None: ... # def cleanText(self) -> str: ... # def displayIntegerBase(self) -> int: ... # def event(self, event: PySide6.QtCore.QEvent) -> bool: ... # def fixup(self, str: str) -> str: ... # def maximum(self) -> int: ... # def minimum(self) -> int: ... # def prefix(self) -> str: ... # def setDisplayIntegerBase(self, base: int) -> None: ... def setMaximum ( self , max : int ) -> None : \"\"\"_summary_ Args: max (int): _description_ \"\"\" ... def setMinimum ( self , min : int ) -> None : \"\"\"_summary_ Args: min (int): _description_ \"\"\" ... # def setPrefix(self, prefix: str) -> None: ... # def setRange(self, min: int, max: int) -> None: ... def setSingleStep ( self , val : int ) -> None : \"\"\"_summary_ Args: val (int): _description_ \"\"\" ... # def setStepType(self, stepType: PySide6.QtWidgets.QAbstractSpinBox.StepType) -> None: ... # def setSuffix(self, suffix: str) -> None: ... def setValue ( self , val : int ) -> None : \"\"\"_summary_ Args: val (int): _description_ \"\"\" ... # def singleStep(self) -> int: ... # def stepType(self) -> PySide6.QtWidgets.QAbstractSpinBox.StepType: ... # def suffix(self) -> str: ... # def textFromValue(self, val: int) -> str: ... # def validate(self, input: str, pos: int) -> object: ... def value ( self ) -> int : \"\"\"_summary_ Returns: int: _description_ \"\"\" ...","title":"QSpinBox"},{"location":"API_reference/#QtWidgets.QSpinBox.setMaximum","text":"summary Parameters: Name Type Description Default max int description required Source code in QtWidgets.py 6137 6138 6139 6140 6141 6142 6143 def setMaximum ( self , max : int ) -> None : \"\"\"_summary_ Args: max (int): _description_ \"\"\" ...","title":"setMaximum"},{"location":"API_reference/#QtWidgets.QSpinBox.setMinimum","text":"summary Parameters: Name Type Description Default min int description required Source code in QtWidgets.py 6145 6146 6147 6148 6149 6150 6151 def setMinimum ( self , min : int ) -> None : \"\"\"_summary_ Args: min (int): _description_ \"\"\" ...","title":"setMinimum"},{"location":"API_reference/#QtWidgets.QSpinBox.setSingleStep","text":"summary Parameters: Name Type Description Default val int description required Source code in QtWidgets.py 6155 6156 6157 6158 6159 6160 6161 def setSingleStep ( self , val : int ) -> None : \"\"\"_summary_ Args: val (int): _description_ \"\"\" ...","title":"setSingleStep"},{"location":"API_reference/#QtWidgets.QSpinBox.setValue","text":"summary Parameters: Name Type Description Default val int description required Source code in QtWidgets.py 6165 6166 6167 6168 6169 6170 6171 def setValue ( self , val : int ) -> None : \"\"\"_summary_ Args: val (int): _description_ \"\"\" ...","title":"setValue"},{"location":"API_reference/#QtWidgets.QSpinBox.value","text":"summary Returns: Name Type Description int int description Source code in QtWidgets.py 6178 6179 6180 6181 6182 6183 6184 def value ( self ) -> int : \"\"\"_summary_ Returns: int: _description_ \"\"\" ...","title":"value"},{"location":"API_reference/#QtWidgets.QTextEdit","text":"Bases: QAbstractScrollArea summary Parameters: Name Type Description Default PySide6 _type_ description required Source code in QtWidgets.py 8247 8248 8249 8250 8251 8252 8253 8254 8255 8256 8257 8258 8259 8260 8261 8262 8263 8264 8265 8266 8267 8268 8269 8270 8271 8272 8273 8274 8275 8276 8277 8278 8279 8280 8281 8282 8283 8284 8285 8286 8287 8288 8289 8290 8291 8292 8293 8294 8295 8296 8297 8298 8299 8300 8301 8302 8303 8304 8305 8306 8307 8308 8309 8310 8311 8312 8313 8314 8315 8316 8317 8318 8319 8320 8321 8322 8323 8324 8325 8326 8327 8328 8329 8330 8331 8332 8333 8334 8335 8336 8337 8338 8339 8340 8341 8342 8343 8344 8345 8346 8347 8348 8349 8350 8351 8352 8353 8354 8355 8356 8357 8358 8359 8360 8361 8362 8363 8364 8365 8366 8367 8368 8369 8370 8371 8372 8373 8374 8375 8376 8377 8378 8379 8380 8381 8382 8383 8384 8385 8386 8387 8388 8389 8390 8391 8392 8393 8394 8395 8396 8397 8398 8399 8400 8401 8402 8403 8404 8405 8406 8407 8408 8409 8410 8411 8412 8413 8414 8415 8416 8417 8418 8419 8420 8421 8422 8423 8424 8425 8426 8427 8428 8429 8430 8431 8432 8433 8434 8435 8436 8437 8438 8439 8440 8441 8442 8443 8444 8445 8446 8447 8448 8449 8450 8451 8452 8453 8454 8455 8456 8457 8458 8459 8460 8461 8462 8463 8464 8465 8466 8467 8468 8469 8470 8471 8472 8473 8474 8475 8476 8477 8478 8479 8480 8481 8482 8483 8484 8485 8486 8487 8488 8489 8490 8491 8492 8493 8494 8495 8496 8497 8498 8499 8500 8501 8502 8503 8504 8505 8506 8507 8508 8509 8510 8511 8512 8513 8514 8515 8516 8517 8518 8519 8520 8521 8522 8523 8524 8525 8526 8527 8528 8529 8530 8531 8532 8533 8534 8535 8536 8537 8538 8539 8540 8541 8542 8543 8544 8545 8546 8547 8548 8549 8550 8551 8552 8553 8554 8555 8556 8557 8558 8559 8560 8561 8562 8563 8564 8565 8566 8567 8568 8569 8570 8571 8572 8573 8574 8575 8576 8577 8578 8579 8580 8581 8582 8583 8584 8585 8586 8587 8588 8589 8590 8591 8592 8593 8594 8595 8596 8597 8598 8599 8600 8601 8602 8603 8604 8605 8606 8607 8608 8609 8610 8611 8612 8613 8614 8615 8616 8617 8618 8619 8620 8621 8622 8623 8624 8625 8626 8627 8628 8629 8630 8631 8632 8633 8634 8635 8636 8637 8638 8639 8640 8641 8642 8643 8644 8645 8646 8647 8648 8649 8650 8651 8652 8653 8654 8655 8656 8657 8658 8659 8660 8661 8662 8663 8664 8665 8666 8667 8668 8669 8670 8671 8672 8673 8674 8675 8676 8677 8678 8679 8680 8681 8682 8683 8684 8685 8686 8687 8688 8689 8690 8691 8692 8693 8694 8695 8696 8697 8698 8699 8700 8701 8702 8703 8704 8705 8706 8707 8708 8709 8710 8711 8712 8713 8714 8715 8716 8717 8718 8719 8720 8721 8722 8723 8724 8725 8726 8727 8728 8729 8730 8731 8732 8733 class QTextEdit ( PySide6 . QtWidgets . QAbstractScrollArea ): \"\"\"_summary_ Args: PySide6 (_type_): _description_ \"\"\" copyAvailable : ClassVar [ Signal ] = ... # copyAvailable(bool) currentCharFormatChanged : ClassVar [ Signal ] = ( ... ) # currentCharFormatChanged(QTextCharFormat) cursorPositionChanged : ClassVar [ Signal ] = ... # cursorPositionChanged() redoAvailable : ClassVar [ Signal ] = ... # redoAvailable(bool) selectionChanged : ClassVar [ Signal ] = ... # selectionChanged() textChanged : ClassVar [ Signal ] = ... # textChanged() undoAvailable : ClassVar [ Signal ] = ... # undoAvailable(bool) class AutoFormattingFlag ( enum . Flag ): AutoAll : QTextEdit . AutoFormattingFlag = ... # -0x1 AutoNone : QTextEdit . AutoFormattingFlag = ... # 0x0 AutoBulletList : QTextEdit . AutoFormattingFlag = ... # 0x1 class ExtraSelection ( Shiboken . Object ): @overload def __init__ ( self ) -> None : ... @overload def __init__ ( self , ExtraSelection : PySide6 . QtWidgets . QTextEdit . ExtraSelection ) -> None : ... @staticmethod def __copy__ () -> None : ... class LineWrapMode ( enum . Enum ): NoWrap : QTextEdit . LineWrapMode = ... # 0x0 WidgetWidth : QTextEdit . LineWrapMode = ... # 0x1 FixedPixelWidth : QTextEdit . LineWrapMode = ... # 0x2 FixedColumnWidth : QTextEdit . LineWrapMode = ... # 0x3 @overload def __init__ ( self , parent : Optional [ PySide6 . QtWidgets . QWidget ] = ... ) -> None : ... @overload def __init__ ( self , text : str , parent : Optional [ PySide6 . QtWidgets . QWidget ] = ... ) -> None : ... def acceptRichText ( self ) -> bool : \"\"\"_summary_ Returns: bool: _description_ \"\"\" ... def alignment ( self ) -> PySide6 . QtCore . Qt . AlignmentFlag : \"\"\"_summary_ Returns: PySide6.QtCore.Qt.AlignmentFlag: _description_ \"\"\" ... def anchorAt ( self , pos : PySide6 . QtCore . QPoint ) -> str : \"\"\"_summary_ Args: pos (PySide6.QtCore.QPoint): _description_ Returns: str: _description_ \"\"\" ... def append ( self , text : str ) -> None : \"\"\"_summary_ Args: text (str): _description_ \"\"\" ... def autoFormatting ( self ) -> PySide6 . QtWidgets . QTextEdit . AutoFormattingFlag : \"\"\"_summary_ Returns: PySide6.QtWidgets.QTextEdit.AutoFormattingFlag: _description_ \"\"\" ... def canInsertFromMimeData ( self , source : PySide6 . QtCore . QMimeData ) -> bool : \"\"\"_summary_ Args: source (PySide6.QtCore.QMimeData): _description_ Returns: bool: _description_ \"\"\" ... def canPaste ( self ) -> bool : \"\"\"_summary_ Returns: bool: _description_ \"\"\" ... def changeEvent ( self , e : PySide6 . QtCore . QEvent ) -> None : \"\"\"_summary_ Args: e (PySide6.QtCore.QEvent): _description_ \"\"\" ... def clear ( self ) -> None : \"\"\"_summary_\"\"\" ... def contextMenuEvent ( self , e : PySide6 . QtGui . QContextMenuEvent ) -> None : \"\"\"_summary_ Args: e (PySide6.QtGui.QContextMenuEvent): _description_ \"\"\" ... def copy ( self ) -> None : \"\"\"_summary_\"\"\" ... def createMimeDataFromSelection ( self ) -> PySide6 . QtCore . QMimeData : \"\"\"_summary_ Returns: PySide6.QtCore.QMimeData: _description_ \"\"\" ... @overload def createStandardContextMenu ( self ) -> PySide6 . QtWidgets . QMenu : \"\"\"_summary_ Returns: PySide6.QtWidgets.QMenu: _description_ \"\"\" ... @overload def createStandardContextMenu ( self , position : PySide6 . QtCore . QPoint ) -> PySide6 . QtWidgets . QMenu : \"\"\"_summary_ Args: position (PySide6.QtCore.QPoint): _description_ Returns: PySide6.QtWidgets.QMenu: _description_ \"\"\" ... def currentCharFormat ( self ) -> PySide6 . QtGui . QTextCharFormat : \"\"\"_summary_ Returns: PySide6.QtGui.QTextCharFormat: _description_ \"\"\" ... def currentFont ( self ) -> PySide6 . QtGui . QFont : \"\"\"_summary_ Returns: PySide6.QtGui.QFont: _description_ \"\"\" ... def cursorForPosition ( self , pos : PySide6 . QtCore . QPoint ) -> PySide6 . QtGui . QTextCursor : \"\"\"_summary_ Args: pos (PySide6.QtCore.QPoint): _description_ Returns: PySide6.QtGui.QTextCursor: _description_ \"\"\" ... @overload def cursorRect ( self ) -> PySide6 . QtCore . QRect : \"\"\"_summary_ Returns: PySide6.QtCore.QRect: _description_ \"\"\" ... @overload def cursorRect ( self , cursor : PySide6 . QtGui . QTextCursor ) -> PySide6 . QtCore . QRect : \"\"\"_summary_ Args: cursor (PySide6.QtGui.QTextCursor): _description_ Returns: PySide6.QtCore.QRect: _description_ \"\"\" ... def cursorWidth ( self ) -> int : \"\"\"_summary_ Returns: int: _description_ \"\"\" ... def cut ( self ) -> None : \"\"\"_summary_\"\"\" ... def doSetTextCursor ( self , cursor : PySide6 . QtGui . QTextCursor ) -> None : \"\"\"_summary_ Args: cursor (PySide6.QtGui.QTextCursor): _description_ \"\"\" ... def document ( self ) -> PySide6 . QtGui . QTextDocument : \"\"\"_summary_ Returns: PySide6.QtGui.QTextDocument: _description_ \"\"\" ... def documentTitle ( self ) -> str : \"\"\"_summary_ Returns: str: _description_ \"\"\" ... def dragEnterEvent ( self , e : PySide6 . QtGui . QDragEnterEvent ) -> None : \"\"\"_summary_ Args: e (PySide6.QtGui.QDragEnterEvent): _description_ \"\"\" ... def dragLeaveEvent ( self , e : PySide6 . QtGui . QDragLeaveEvent ) -> None : \"\"\"_summary_ Args: e (PySide6.QtGui.QDragLeaveEvent): _description_ \"\"\" ... def dragMoveEvent ( self , e : PySide6 . QtGui . QDragMoveEvent ) -> None : \"\"\"_summary_ Args: e (PySide6.QtGui.QDragMoveEvent): _description_ \"\"\" ... def dropEvent ( self , e : PySide6 . QtGui . QDropEvent ) -> None : \"\"\"_summary_ Args: e (PySide6.QtGui.QDropEvent): _description_ \"\"\" ... def ensureCursorVisible ( self ) -> None : \"\"\"_summary_\"\"\" ... def event ( self , e : PySide6 . QtCore . QEvent ) -> bool : \"\"\"_summary_ Args: e (PySide6.QtCore.QEvent): _description_ Returns: bool: _description_ \"\"\" ... def extraSelections ( self ) -> List [ PySide6 . QtWidgets . QTextEdit . ExtraSelection ]: \"\"\"_summary_ Returns: List[PySide6.QtWidgets.QTextEdit.ExtraSelection]: _description_ \"\"\" ... @overload def find ( self , exp : str , options : PySide6 . QtGui . QTextDocument . FindFlag = ... ) -> bool : \"\"\"_summary_ Args: exp (str): _description_ options (PySide6.QtGui.QTextDocument.FindFlag, optional): _description_. Defaults to .... Returns: bool: _description_ \"\"\" ... @overload def find ( self , exp : Union [ PySide6 . QtCore . QRegularExpression , str ], options : PySide6 . QtGui . QTextDocument . FindFlag = ... , ) -> bool : \"\"\"_summary_ Args: exp (Union[PySide6.QtCore.QRegularExpression, str]): _description_ options (PySide6.QtGui.QTextDocument.FindFlag, optional): _description_. Defaults to .... Returns: bool: _description_ \"\"\" ... def focusInEvent ( self , e : PySide6 . QtGui . QFocusEvent ) -> None : \"\"\"_summary_ Args: e (PySide6.QtGui.QFocusEvent): _description_ \"\"\" ... def focusNextPrevChild ( self , next : bool ) -> bool : \"\"\"_summary_ Args: next (bool): _description_ Returns: bool: _description_ \"\"\" ... def focusOutEvent ( self , e : PySide6 . QtGui . QFocusEvent ) -> None : \"\"\"_summary_ Args: e (PySide6.QtGui.QFocusEvent): _description_ \"\"\" ... def fontFamily ( self ) -> str : ... def fontItalic ( self ) -> bool : ... def fontPointSize ( self ) -> float : ... def fontUnderline ( self ) -> bool : ... def fontWeight ( self ) -> int : ... def inputMethodEvent ( self , arg__1 : PySide6 . QtGui . QInputMethodEvent ) -> None : ... @overload def inputMethodQuery ( self , property : PySide6 . QtCore . Qt . InputMethodQuery ) -> Any : ... @overload def inputMethodQuery ( self , query : PySide6 . QtCore . Qt . InputMethodQuery , argument : Any ) -> Any : ... def insertFromMimeData ( self , source : PySide6 . QtCore . QMimeData ) -> None : ... def insertHtml ( self , text : str ) -> None : ... def insertPlainText ( self , text : str ) -> None : ... def isReadOnly ( self ) -> bool : ... def isUndoRedoEnabled ( self ) -> bool : ... def keyPressEvent ( self , e : PySide6 . QtGui . QKeyEvent ) -> None : ... def keyReleaseEvent ( self , e : PySide6 . QtGui . QKeyEvent ) -> None : ... def lineWrapColumnOrWidth ( self ) -> int : ... def lineWrapMode ( self ) -> PySide6 . QtWidgets . QTextEdit . LineWrapMode : ... def loadResource ( self , type : int , name : Union [ PySide6 . QtCore . QUrl , str ]) -> Any : ... def mergeCurrentCharFormat ( self , modifier : PySide6 . QtGui . QTextCharFormat ) -> None : ... def mouseDoubleClickEvent ( self , e : PySide6 . QtGui . QMouseEvent ) -> None : ... def mouseMoveEvent ( self , e : PySide6 . QtGui . QMouseEvent ) -> None : ... def mousePressEvent ( self , e : PySide6 . QtGui . QMouseEvent ) -> None : ... def mouseReleaseEvent ( self , e : PySide6 . QtGui . QMouseEvent ) -> None : ... def moveCursor ( self , operation : PySide6 . QtGui . QTextCursor . MoveOperation , mode : PySide6 . QtGui . QTextCursor . MoveMode = ... , ) -> None : ... def overwriteMode ( self ) -> bool : ... def paintEvent ( self , e : PySide6 . QtGui . QPaintEvent ) -> None : ... def paste ( self ) -> None : ... def placeholderText ( self ) -> str : ... def print_ ( self , printer : PySide6 . QtGui . QPagedPaintDevice ) -> None : ... def redo ( self ) -> None : ... def resizeEvent ( self , e : PySide6 . QtGui . QResizeEvent ) -> None : ... def scrollContentsBy ( self , dx : int , dy : int ) -> None : ... def scrollToAnchor ( self , name : str ) -> None : ... def selectAll ( self ) -> None : ... def setAcceptRichText ( self , accept : bool ) -> None : ... def setAlignment ( self , a : PySide6 . QtCore . Qt . AlignmentFlag ) -> None : ... def setAutoFormatting ( self , features : PySide6 . QtWidgets . QTextEdit . AutoFormattingFlag ) -> None : ... def setCurrentCharFormat ( self , format : PySide6 . QtGui . QTextCharFormat ) -> None : ... def setCurrentFont ( self , f : Union [ PySide6 . QtGui . QFont , str , Sequence [ str ]] ) -> None : ... def setCursorWidth ( self , width : int ) -> None : ... def setDocument ( self , document : PySide6 . QtGui . QTextDocument ) -> None : ... def setDocumentTitle ( self , title : str ) -> None : ... def setExtraSelections ( self , selections : Sequence [ PySide6 . QtWidgets . QTextEdit . ExtraSelection ] ) -> None : ... def setFontFamily ( self , fontFamily : str ) -> None : ... def setFontItalic ( self , b : bool ) -> None : ... def setFontPointSize ( self , s : float ) -> None : ... def setFontUnderline ( self , b : bool ) -> None : ... def setFontWeight ( self , w : int ) -> None : ... def setHtml ( self , text : str ) -> None : ... def setLineWrapColumnOrWidth ( self , w : int ) -> None : ... def setLineWrapMode ( self , mode : PySide6 . QtWidgets . QTextEdit . LineWrapMode ) -> None : ... def setMarkdown ( self , markdown : str ) -> None : ... def setOverwriteMode ( self , overwrite : bool ) -> None : ... def setPlaceholderText ( self , placeholderText : str ) -> None : ... def setPlainText ( self , text : str ) -> None : ... def setReadOnly ( self , ro : bool ) -> None : ... def setTabChangesFocus ( self , b : bool ) -> None : ... def setTabStopDistance ( self , distance : float ) -> None : ... def setText ( self , text : str ) -> None : ... def setTextBackgroundColor ( self , c : Union [ PySide6 . QtGui . QColor , PySide6 . QtGui . QRgba64 , Any , PySide6 . QtCore . Qt . GlobalColor , str , int , ], ) -> None : ... def setTextColor ( self , c : Union [ PySide6 . QtGui . QColor , PySide6 . QtGui . QRgba64 , Any , PySide6 . QtCore . Qt . GlobalColor , str , int , ], ) -> None : ... def setTextCursor ( self , cursor : PySide6 . QtGui . QTextCursor ) -> None : ... def setTextInteractionFlags ( self , flags : PySide6 . QtCore . Qt . TextInteractionFlag ) -> None : ... def setUndoRedoEnabled ( self , enable : bool ) -> None : ... def setWordWrapMode ( self , policy : PySide6 . QtGui . QTextOption . WrapMode ) -> None : ... def showEvent ( self , arg__1 : PySide6 . QtGui . QShowEvent ) -> None : ... def tabChangesFocus ( self ) -> bool : ... def tabStopDistance ( self ) -> float : ... def textBackgroundColor ( self ) -> PySide6 . QtGui . QColor : ... def textColor ( self ) -> PySide6 . QtGui . QColor : ... def textCursor ( self ) -> PySide6 . QtGui . QTextCursor : ... def textInteractionFlags ( self ) -> PySide6 . QtCore . Qt . TextInteractionFlag : ... def timerEvent ( self , e : PySide6 . QtCore . QTimerEvent ) -> None : ... def toHtml ( self ) -> str : ... def toMarkdown ( self , features : PySide6 . QtGui . QTextDocument . MarkdownFeature = ... ) -> str : ... def toPlainText ( self ) -> str : ... def undo ( self ) -> None : ... def wheelEvent ( self , e : PySide6 . QtGui . QWheelEvent ) -> None : ... def wordWrapMode ( self ) -> PySide6 . QtGui . QTextOption . WrapMode : ... def zoomIn ( self , range : int = ... ) -> None : ... def zoomInF ( self , range : float ) -> None : ... def zoomOut ( self , range : int = ... ) -> None : ...","title":"QTextEdit"},{"location":"API_reference/#QtWidgets.QTextEdit.acceptRichText","text":"summary Returns: Name Type Description bool bool description Source code in QtWidgets.py 8293 8294 8295 8296 8297 8298 8299 def acceptRichText ( self ) -> bool : \"\"\"_summary_ Returns: bool: _description_ \"\"\" ...","title":"acceptRichText"},{"location":"API_reference/#QtWidgets.QTextEdit.alignment","text":"summary Returns: Type Description AlignmentFlag PySide6.QtCore.Qt.AlignmentFlag: description Source code in QtWidgets.py 8301 8302 8303 8304 8305 8306 8307 def alignment ( self ) -> PySide6 . QtCore . Qt . AlignmentFlag : \"\"\"_summary_ Returns: PySide6.QtCore.Qt.AlignmentFlag: _description_ \"\"\" ...","title":"alignment"},{"location":"API_reference/#QtWidgets.QTextEdit.anchorAt","text":"summary Parameters: Name Type Description Default pos QPoint description required Returns: Name Type Description str str description Source code in QtWidgets.py 8309 8310 8311 8312 8313 8314 8315 8316 8317 8318 def anchorAt ( self , pos : PySide6 . QtCore . QPoint ) -> str : \"\"\"_summary_ Args: pos (PySide6.QtCore.QPoint): _description_ Returns: str: _description_ \"\"\" ...","title":"anchorAt"},{"location":"API_reference/#QtWidgets.QTextEdit.append","text":"summary Parameters: Name Type Description Default text str description required Source code in QtWidgets.py 8320 8321 8322 8323 8324 8325 8326 def append ( self , text : str ) -> None : \"\"\"_summary_ Args: text (str): _description_ \"\"\" ...","title":"append"},{"location":"API_reference/#QtWidgets.QTextEdit.autoFormatting","text":"summary Returns: Type Description AutoFormattingFlag PySide6.QtWidgets.QTextEdit.AutoFormattingFlag: description Source code in QtWidgets.py 8328 8329 8330 8331 8332 8333 8334 def autoFormatting ( self ) -> PySide6 . QtWidgets . QTextEdit . AutoFormattingFlag : \"\"\"_summary_ Returns: PySide6.QtWidgets.QTextEdit.AutoFormattingFlag: _description_ \"\"\" ...","title":"autoFormatting"},{"location":"API_reference/#QtWidgets.QTextEdit.canInsertFromMimeData","text":"summary Parameters: Name Type Description Default source QMimeData description required Returns: Name Type Description bool bool description Source code in QtWidgets.py 8336 8337 8338 8339 8340 8341 8342 8343 8344 8345 def canInsertFromMimeData ( self , source : PySide6 . QtCore . QMimeData ) -> bool : \"\"\"_summary_ Args: source (PySide6.QtCore.QMimeData): _description_ Returns: bool: _description_ \"\"\" ...","title":"canInsertFromMimeData"},{"location":"API_reference/#QtWidgets.QTextEdit.canPaste","text":"summary Returns: Name Type Description bool bool description Source code in QtWidgets.py 8347 8348 8349 8350 8351 8352 8353 def canPaste ( self ) -> bool : \"\"\"_summary_ Returns: bool: _description_ \"\"\" ...","title":"canPaste"},{"location":"API_reference/#QtWidgets.QTextEdit.changeEvent","text":"summary Parameters: Name Type Description Default e QEvent description required Source code in QtWidgets.py 8355 8356 8357 8358 8359 8360 8361 def changeEvent ( self , e : PySide6 . QtCore . QEvent ) -> None : \"\"\"_summary_ Args: e (PySide6.QtCore.QEvent): _description_ \"\"\" ...","title":"changeEvent"},{"location":"API_reference/#QtWidgets.QTextEdit.clear","text":"summary Source code in QtWidgets.py 8363 8364 8365 def clear ( self ) -> None : \"\"\"_summary_\"\"\" ...","title":"clear"},{"location":"API_reference/#QtWidgets.QTextEdit.contextMenuEvent","text":"summary Parameters: Name Type Description Default e QContextMenuEvent description required Source code in QtWidgets.py 8367 8368 8369 8370 8371 8372 8373 def contextMenuEvent ( self , e : PySide6 . QtGui . QContextMenuEvent ) -> None : \"\"\"_summary_ Args: e (PySide6.QtGui.QContextMenuEvent): _description_ \"\"\" ...","title":"contextMenuEvent"},{"location":"API_reference/#QtWidgets.QTextEdit.copy","text":"summary Source code in QtWidgets.py 8375 8376 8377 def copy ( self ) -> None : \"\"\"_summary_\"\"\" ...","title":"copy"},{"location":"API_reference/#QtWidgets.QTextEdit.createMimeDataFromSelection","text":"summary Returns: Type Description QMimeData PySide6.QtCore.QMimeData: description Source code in QtWidgets.py 8379 8380 8381 8382 8383 8384 8385 def createMimeDataFromSelection ( self ) -> PySide6 . QtCore . QMimeData : \"\"\"_summary_ Returns: PySide6.QtCore.QMimeData: _description_ \"\"\" ...","title":"createMimeDataFromSelection"},{"location":"API_reference/#QtWidgets.QTextEdit.currentCharFormat","text":"summary Returns: Type Description QTextCharFormat PySide6.QtGui.QTextCharFormat: description Source code in QtWidgets.py 8410 8411 8412 8413 8414 8415 8416 def currentCharFormat ( self ) -> PySide6 . QtGui . QTextCharFormat : \"\"\"_summary_ Returns: PySide6.QtGui.QTextCharFormat: _description_ \"\"\" ...","title":"currentCharFormat"},{"location":"API_reference/#QtWidgets.QTextEdit.currentFont","text":"summary Returns: Type Description QFont PySide6.QtGui.QFont: description Source code in QtWidgets.py 8418 8419 8420 8421 8422 8423 8424 def currentFont ( self ) -> PySide6 . QtGui . QFont : \"\"\"_summary_ Returns: PySide6.QtGui.QFont: _description_ \"\"\" ...","title":"currentFont"},{"location":"API_reference/#QtWidgets.QTextEdit.cursorForPosition","text":"summary Parameters: Name Type Description Default pos QPoint description required Returns: Type Description QTextCursor PySide6.QtGui.QTextCursor: description Source code in QtWidgets.py 8426 8427 8428 8429 8430 8431 8432 8433 8434 8435 8436 8437 def cursorForPosition ( self , pos : PySide6 . QtCore . QPoint ) -> PySide6 . QtGui . QTextCursor : \"\"\"_summary_ Args: pos (PySide6.QtCore.QPoint): _description_ Returns: PySide6.QtGui.QTextCursor: _description_ \"\"\" ...","title":"cursorForPosition"},{"location":"API_reference/#QtWidgets.QTextEdit.cursorWidth","text":"summary Returns: Name Type Description int int description Source code in QtWidgets.py 8460 8461 8462 8463 8464 8465 8466 def cursorWidth ( self ) -> int : \"\"\"_summary_ Returns: int: _description_ \"\"\" ...","title":"cursorWidth"},{"location":"API_reference/#QtWidgets.QTextEdit.cut","text":"summary Source code in QtWidgets.py 8468 8469 8470 def cut ( self ) -> None : \"\"\"_summary_\"\"\" ...","title":"cut"},{"location":"API_reference/#QtWidgets.QTextEdit.doSetTextCursor","text":"summary Parameters: Name Type Description Default cursor QTextCursor description required Source code in QtWidgets.py 8472 8473 8474 8475 8476 8477 8478 def doSetTextCursor ( self , cursor : PySide6 . QtGui . QTextCursor ) -> None : \"\"\"_summary_ Args: cursor (PySide6.QtGui.QTextCursor): _description_ \"\"\" ...","title":"doSetTextCursor"},{"location":"API_reference/#QtWidgets.QTextEdit.document","text":"summary Returns: Type Description QTextDocument PySide6.QtGui.QTextDocument: description Source code in QtWidgets.py 8480 8481 8482 8483 8484 8485 8486 def document ( self ) -> PySide6 . QtGui . QTextDocument : \"\"\"_summary_ Returns: PySide6.QtGui.QTextDocument: _description_ \"\"\" ...","title":"document"},{"location":"API_reference/#QtWidgets.QTextEdit.documentTitle","text":"summary Returns: Name Type Description str str description Source code in QtWidgets.py 8488 8489 8490 8491 8492 8493 8494 def documentTitle ( self ) -> str : \"\"\"_summary_ Returns: str: _description_ \"\"\" ...","title":"documentTitle"},{"location":"API_reference/#QtWidgets.QTextEdit.dragEnterEvent","text":"summary Parameters: Name Type Description Default e QDragEnterEvent description required Source code in QtWidgets.py 8496 8497 8498 8499 8500 8501 8502 def dragEnterEvent ( self , e : PySide6 . QtGui . QDragEnterEvent ) -> None : \"\"\"_summary_ Args: e (PySide6.QtGui.QDragEnterEvent): _description_ \"\"\" ...","title":"dragEnterEvent"},{"location":"API_reference/#QtWidgets.QTextEdit.dragLeaveEvent","text":"summary Parameters: Name Type Description Default e QDragLeaveEvent description required Source code in QtWidgets.py 8504 8505 8506 8507 8508 8509 8510 def dragLeaveEvent ( self , e : PySide6 . QtGui . QDragLeaveEvent ) -> None : \"\"\"_summary_ Args: e (PySide6.QtGui.QDragLeaveEvent): _description_ \"\"\" ...","title":"dragLeaveEvent"},{"location":"API_reference/#QtWidgets.QTextEdit.dragMoveEvent","text":"summary Parameters: Name Type Description Default e QDragMoveEvent description required Source code in QtWidgets.py 8512 8513 8514 8515 8516 8517 8518 def dragMoveEvent ( self , e : PySide6 . QtGui . QDragMoveEvent ) -> None : \"\"\"_summary_ Args: e (PySide6.QtGui.QDragMoveEvent): _description_ \"\"\" ...","title":"dragMoveEvent"},{"location":"API_reference/#QtWidgets.QTextEdit.dropEvent","text":"summary Parameters: Name Type Description Default e QDropEvent description required Source code in QtWidgets.py 8520 8521 8522 8523 8524 8525 8526 def dropEvent ( self , e : PySide6 . QtGui . QDropEvent ) -> None : \"\"\"_summary_ Args: e (PySide6.QtGui.QDropEvent): _description_ \"\"\" ...","title":"dropEvent"},{"location":"API_reference/#QtWidgets.QTextEdit.ensureCursorVisible","text":"summary Source code in QtWidgets.py 8528 8529 8530 def ensureCursorVisible ( self ) -> None : \"\"\"_summary_\"\"\" ...","title":"ensureCursorVisible"},{"location":"API_reference/#QtWidgets.QTextEdit.event","text":"summary Parameters: Name Type Description Default e QEvent description required Returns: Name Type Description bool bool description Source code in QtWidgets.py 8532 8533 8534 8535 8536 8537 8538 8539 8540 8541 def event ( self , e : PySide6 . QtCore . QEvent ) -> bool : \"\"\"_summary_ Args: e (PySide6.QtCore.QEvent): _description_ Returns: bool: _description_ \"\"\" ...","title":"event"},{"location":"API_reference/#QtWidgets.QTextEdit.extraSelections","text":"summary Returns: Type Description List [ ExtraSelection ] List[PySide6.QtWidgets.QTextEdit.ExtraSelection]: description Source code in QtWidgets.py 8543 8544 8545 8546 8547 8548 8549 def extraSelections ( self ) -> List [ PySide6 . QtWidgets . QTextEdit . ExtraSelection ]: \"\"\"_summary_ Returns: List[PySide6.QtWidgets.QTextEdit.ExtraSelection]: _description_ \"\"\" ...","title":"extraSelections"},{"location":"API_reference/#QtWidgets.QTextEdit.focusInEvent","text":"summary Parameters: Name Type Description Default e QFocusEvent description required Source code in QtWidgets.py 8583 8584 8585 8586 8587 8588 8589 def focusInEvent ( self , e : PySide6 . QtGui . QFocusEvent ) -> None : \"\"\"_summary_ Args: e (PySide6.QtGui.QFocusEvent): _description_ \"\"\" ...","title":"focusInEvent"},{"location":"API_reference/#QtWidgets.QTextEdit.focusNextPrevChild","text":"summary Parameters: Name Type Description Default next bool description required Returns: Name Type Description bool bool description Source code in QtWidgets.py 8591 8592 8593 8594 8595 8596 8597 8598 8599 8600 def focusNextPrevChild ( self , next : bool ) -> bool : \"\"\"_summary_ Args: next (bool): _description_ Returns: bool: _description_ \"\"\" ...","title":"focusNextPrevChild"},{"location":"API_reference/#QtWidgets.QTextEdit.focusOutEvent","text":"summary Parameters: Name Type Description Default e QFocusEvent description required Source code in QtWidgets.py 8602 8603 8604 8605 8606 8607 8608 def focusOutEvent ( self , e : PySide6 . QtGui . QFocusEvent ) -> None : \"\"\"_summary_ Args: e (PySide6.QtGui.QFocusEvent): _description_ \"\"\" ...","title":"focusOutEvent"},{"location":"API_reference/#QtWidgets.QVBoxLayout","text":"Bases: QBoxLayout summary Parameters: Name Type Description Default PySide6 _type_ description required Source code in QtWidgets.py 9234 9235 9236 9237 9238 9239 9240 9241 9242 9243 9244 class QVBoxLayout ( PySide6 . QtWidgets . QBoxLayout ): \"\"\"_summary_ Args: PySide6 (_type_): _description_ \"\"\" @overload def __init__ ( self ) -> None : ... @overload def __init__ ( self , parent : PySide6 . QtWidgets . QWidget ) -> None : ...","title":"QVBoxLayout"},{"location":"User_Guide/","text":"","title":"User Guide"}]}